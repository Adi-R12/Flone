{"version":3,"sources":["components/product/sub-components/ProductRating.js","components/product/ProductModal.js","components/product/ShopSearch.js","components/product/ShopCategories.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ProductGridListSingle.js","wrappers/product/ProductgridList.js","wrappers/product/ShopProducts.js","pages/shop/ShopGridStandard.js"],"names":["ProductRating","ratingValue","rating","i","push","className","key","connect","state","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","useState","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","variation","color","selectedProductColor","setSelectedProductColor","size","name","selectedProductSize","setSelectedProductSize","stock","productStock","setProductStock","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","cartItems","productCartQty","getProductCartQty","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","show","onHide","Header","closeButton","image","map","single","src","process","alt","currencySymbol","shortDescription","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ShopSearch","setSearchKeyword","action","e","placeholder","ShopCategories","categories","getSortParams","setActiveSort","category","ShopSidebar","products","sideSpaceClass","uniqueCategories","getUniqueCategories","getUniqueColors","getProductsUniqueSizes","getUniqueTags","ShopTopAction","getLayout","getFilterSortParams","productCount","sortedProductCount","setActiveLayout","ShopTopbar","serverURL","ProductGridListSingle","cartItem","sliderClassName","spaceBottomClass","useToasts","discountedPrice","discount","price","Math","floor","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","length","to","id","quantity","productName","currencyData","wishlistItems","wishlistData","compareItems","compareData","dispatch","item","filter","productID","ShopProducts","layout","ProductgridList","productData","location","Products","isLogin","SetUserLogin","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","currentPage","setCurrentPage","currentData","setCurrentData","sortedProducts","setSortedProducts","searchKeyword","setProducts","ProductData","useSelector","getSortedProducts","searchedProducts","regex","RegExp","test","searchResults","slice","content","LayoutOne","headerTop","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"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","file":"static/js/14.f5a38ab1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\n\nconst ProductRating = ({ ratingValue }) => {\n  let rating = [];\n\n  for (let i = 0; i < 5; i++) {\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\n  }\n  if (ratingValue && ratingValue > 0) {\n    for (let i = 0; i <= ratingValue - 1; i++) {\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\n    }\n  }\n  return <Fragment>{rating}</Fragment>;\n};\n\nProductRating.propTypes = {\n  ratingValue: PropTypes.number\n};\n\nexport default ProductRating;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { getProductCartQty } from \"../../helpers/product\";\nimport { Modal } from \"react-bootstrap\";\nimport Rating from \"./sub-components/ProductRating\";\nimport { connect } from \"react-redux\";\n\nfunction ProductModal(props) {\n  const { product } = props;\n  const { currency } = props;\n  const { discountedprice } = props;\n  const { finalproductprice } = props;\n  const { finaldiscountedprice } = props;\n\n  const [gallerySwiper, getGallerySwiper] = useState(null);\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\n  const [selectedProductColor, setSelectedProductColor] = useState(\n    product.variation ? product.variation[0].color : \"\"\n  );\n  const [selectedProductSize, setSelectedProductSize] = useState(\n    product.variation ? product.variation[0].size[0].name : \"\"\n  );\n  const [productStock, setProductStock] = useState(\n    product.variation ? product.variation[0].size[0].stock : product.stock\n  );\n  const [quantityCount, setQuantityCount] = useState(1);\n\n  const wishlistItem = props.wishlistitem;\n  const compareItem = props.compareitem;\n\n  const addToCart = props.addtocart;\n  const addToWishlist = props.addtowishlist;\n  const addToCompare = props.addtocompare;\n\n  const addToast = props.addtoast;\n  const cartItems = props.cartitems;\n\n  const productCartQty = getProductCartQty(\n    cartItems,\n    product,\n    selectedProductColor,\n    selectedProductSize\n  );\n\n  useEffect(() => {\n    if (\n      gallerySwiper !== null &&\n      gallerySwiper.controller &&\n      thumbnailSwiper !== null &&\n      thumbnailSwiper.controller\n    ) {\n      gallerySwiper.controller.control = thumbnailSwiper;\n      thumbnailSwiper.controller.control = gallerySwiper;\n    }\n  }, [gallerySwiper, thumbnailSwiper]);\n\n  const gallerySwiperParams = {\n    getSwiper: getGallerySwiper,\n    spaceBetween: 10,\n    loopedSlides: 4,\n    loop: true\n  };\n\n  const thumbnailSwiperParams = {\n    getSwiper: getThumbnailSwiper,\n    spaceBetween: 10,\n    slidesPerView: 4,\n    loopedSlides: 4,\n    touchRatio: 0.2,\n    freeMode: true,\n    loop: true,\n    slideToClickedSlide: true,\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\"\n    },\n    renderPrevButton: () => (\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-left\" />\n      </button>\n    ),\n    renderNextButton: () => (\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-right\" />\n      </button>\n    )\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        show={props.show}\n        onHide={props.onHide}\n        className=\"product-quickview-modal-wrapper\"\n      >\n        <Modal.Header closeButton></Modal.Header>\n\n        <div className=\"modal-body\">\n          <div className=\"row\">\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\n              <div className=\"product-large-image-wrapper\">\n                <Swiper {...gallerySwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n              <div className=\"product-small-image-wrapper mt-15\">\n                <Swiper {...thumbnailSwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n            </div>\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\n              <div className=\"product-details-content quickview-content\">\n                <h2>{product.name}</h2>\n                <div className=\"product-details-price\">\n                  {discountedprice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finaldiscountedprice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalproductprice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalproductprice} </span>\n                  )}\n                </div>\n                {product.rating && product.rating > 0 ? (\n                  <div className=\"pro-details-rating-wrap\">\n                    <div className=\"pro-details-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"pro-details-list\">\n                  <p>{product.shortDescription}</p>\n                </div>\n\n                {product.variation ? (\n                  <div className=\"pro-details-size-color\">\n                    <div className=\"pro-details-color-wrap\">\n                      <span>Color</span>\n                      <div className=\"pro-details-color-content\">\n                        {product.variation.map((single, key) => {\n                          return (\n                            <label\n                              className={`pro-details-color-content--single ${single.color}`}\n                              key={key}\n                            >\n                              <input\n                                type=\"radio\"\n                                value={single.color}\n                                name=\"product-color\"\n                                checked={\n                                  single.color === selectedProductColor\n                                    ? \"checked\"\n                                    : \"\"\n                                }\n                                onChange={() => {\n                                  setSelectedProductColor(single.color);\n                                  setSelectedProductSize(single.size[0].name);\n                                  setProductStock(single.size[0].stock);\n                                  setQuantityCount(1);\n                                }}\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    <div className=\"pro-details-size\">\n                      <span>Size</span>\n                      <div className=\"pro-details-size-content\">\n                        {product.variation &&\n                          product.variation.map(single => {\n                            return single.color === selectedProductColor\n                              ? single.size.map((singleSize, key) => {\n                                  return (\n                                    <label\n                                      className={`pro-details-size-content--single`}\n                                      key={key}\n                                    >\n                                      <input\n                                        type=\"radio\"\n                                        value={singleSize.name}\n                                        checked={\n                                          singleSize.name ===\n                                          selectedProductSize\n                                            ? \"checked\"\n                                            : \"\"\n                                        }\n                                        onChange={() => {\n                                          setSelectedProductSize(\n                                            singleSize.name\n                                          );\n                                          setProductStock(singleSize.stock);\n                                          setQuantityCount(1);\n                                        }}\n                                      />\n                                      <span className=\"size-name\">\n                                        {singleSize.name}\n                                      </span>\n                                    </label>\n                                  );\n                                })\n                              : \"\";\n                          })}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {product.affiliateLink ? (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"pro-details-cart btn-hover\">\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        Buy Now\n                      </a>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"cart-plus-minus\">\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount > 1 ? quantityCount - 1 : 1\n                          )\n                        }\n                        className=\"dec qtybutton\"\n                      >\n                        -\n                      </button>\n                      <input\n                        className=\"cart-plus-minus-box\"\n                        type=\"text\"\n                        value={quantityCount}\n                        readOnly\n                      />\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount < productStock - productCartQty\n                              ? quantityCount + 1\n                              : quantityCount\n                          )\n                        }\n                        className=\"inc qtybutton\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    <div className=\"pro-details-cart btn-hover\">\n                      {productStock && productStock > 0 ? (\n                        <button\n                          onClick={() =>\n                            addToCart(\n                              product,\n                              addToast,\n                              quantityCount,\n                              selectedProductColor,\n                              selectedProductSize\n                            )\n                          }\n                          disabled={productCartQty >= productStock}\n                        >\n                          {\" \"}\n                          Add To Cart{\" \"}\n                        </button>\n                      ) : (\n                        <button disabled>Out of Stock</button>\n                      )}\n                    </div>\n                    <div className=\"pro-details-wishlist\">\n                      <button\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\n                        disabled={wishlistItem !== undefined}\n                        title={\n                          wishlistItem !== undefined\n                            ? \"Added to wishlist\"\n                            : \"Add to wishlist\"\n                        }\n                        onClick={() => addToWishlist(product, addToast)}\n                      >\n                        <i className=\"pe-7s-like\" />\n                      </button>\n                    </div>\n                    <div className=\"pro-details-compare\">\n                      <button\n                        className={compareItem !== undefined ? \"active\" : \"\"}\n                        disabled={compareItem !== undefined}\n                        title={\n                          compareItem !== undefined\n                            ? \"Added to compare\"\n                            : \"Add to compare\"\n                        }\n                        onClick={() => addToCompare(product, addToast)}\n                      >\n                        <i className=\"pe-7s-shuffle\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n\nProductModal.propTypes = {\n  addtoast: PropTypes.func,\n  addtocart: PropTypes.func,\n  addtocompare: PropTypes.func,\n  addtowishlist: PropTypes.func,\n  cartitems: PropTypes.array,\n  compareitem: PropTypes.object,\n  currency: PropTypes.object,\n  discountedprice: PropTypes.number,\n  finaldiscountedprice: PropTypes.number,\n  finalproductprice: PropTypes.number,\n  onHide: PropTypes.func,\n  product: PropTypes.object,\n  show: PropTypes.bool,\n  wishlistitem: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartitems: state.cartData\n  };\n};\n\nexport default connect(mapStateToProps)(ProductModal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst ShopSearch = ({ setSearchKeyword }) => {\n  const keywordHandler = (e) => {\n    setSearchKeyword(e.target.value);\n  }\n  return (\n    <div className=\"sidebar-widget\">\n      <h4 className=\"pro-sidebar-title\">Search </h4>\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\n          <input type=\"text\" onChange={keywordHandler} placeholder=\"Search here...\" />\n          <button>\n            <i className=\"pe-7s-search\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\nShopSearch.propTypes = {\n  setSearchKeyword:PropTypes.func\n};\nexport default ShopSearch;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { setActiveSort } from \"../../helpers/product\";\n\nconst ShopCategories = ({ categories, getSortParams }) => {\n  return (\n    <div className=\"sidebar-widget\">\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\n      <div className=\"sidebar-widget-list mt-30\">\n        {categories ? (\n          <ul>\n            <li>\n              <div className=\"sidebar-widget-list-left\">\n                <button\n                  onClick={e => {\n                    getSortParams(\"category\", \"\");\n                    setActiveSort(e);\n                  }}\n                >\n                  <span className=\"checkmark\" /> All Categories\n                </button>\n              </div>\n            </li>\n            {categories.map((category, key) => {\n              return (\n                <li key={key}>\n                  <div className=\"sidebar-widget-list-left\">\n                    <button\n                      onClick={e => {\n                        getSortParams(\"category\", category);\n                        setActiveSort(e);\n                      }}\n                    >\n                      {\" \"}\n                      <span className=\"checkmark\" /> {category}{\" \"}\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          \"No categories found\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nShopCategories.propTypes = {\n  categories: PropTypes.array,\n  getSortParams: PropTypes.func\n};\n\nexport default ShopCategories;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  getUniqueCategories,\n  getUniqueTags,\n  getUniqueColors,\n  getProductsUniqueSizes\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopColor from \"../../components/product/ShopColor\";\nimport ShopSize from \"../../components/product/ShopSize\";\nimport ShopTag from \"../../components/product/ShopTag\";\n\nconst ShopSidebar = ({ products,setSearchKeyword, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getUniqueCategories(products);\n  const uniqueColors = getUniqueColors(products);\n  const uniqueSizes = getProductsUniqueSizes(products);\n  const uniqueTags = getUniqueTags(products);\n\n  return (\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\n      {/* shop search */}\n      <ShopSearch\n        setSearchKeyword={setSearchKeyword}\n      />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by color */}\n   {/* {   <ShopColor colors={uniqueColors} getSortParams={getSortParams} />} */}\n\n      {/* filter by size */}\n      {/* <ShopSize sizes={uniqueSizes} getSortParams={getSortParams} /> */}\n\n      {/* filter by tag */}\n      {/* <ShopTag tags={uniqueTags} getSortParams={getSortParams} /> */}\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  setSearchKeyword:PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { setActiveLayout } from \"../../helpers/product\";\n\nconst ShopTopAction = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <div className=\"shop-top-bar mb-35\">\n      <div className=\"select-shoing-wrap\">\n        <div className=\"shop-select\">\n          <select\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\n          >\n            <option value=\"default\">Default</option>\n            <option value=\"priceHighToLow\">Price - High to Low</option>\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\n          </select>\n        </div>\n        <p>\n          Showing {sortedProductCount} of {productCount} result\n        </p>\n      </div>\n\n      <div className=\"shop-tab\">\n        <button\n          onClick={e => {\n            getLayout(\"grid two-column\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-th-large\" />\n        </button>\n        <button\n          onClick={e => {\n            getLayout(\"grid three-column\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-th\" />\n        </button>\n        <button\n          onClick={e => {\n            getLayout(\"list\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-list-ul\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nShopTopAction.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopAction;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport Rating from \"./sub-components/ProductRating\";\nimport ProductModal from \"./ProductModal\";\nimport \"../../assets/css/extras.css\";\nconst serverURL = \"http://localhost:9000/static/\";\n// const serverURL = \"https://infinite-sands-08332.herokuapp.com/static/\";\nconst ProductGridListSingle = ({\n  product,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItem,\n  wishlistItem,\n  compareItem,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { addToast } = useToasts();\n\n  // const discountedPrice = getDiscountPrice(product.price, product.discount);\n  const discountedPrice = product.discountedPrice;\n  let discount =100- (discountedPrice / product.price) * 100;\n  discount = Math.floor(discount);\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\n  const finalDiscountedPrice = +(\n    discountedPrice * currency.currencyRate\n  ).toFixed(2);\n\n  return (\n    <Fragment>\n      <div\n        className={`col-xl-4 col-sm-6 ${\n          sliderClassName ? sliderClassName : \"\"\n        }`}\n      >\n        <div\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\n        >\n          <div className=\"product-img\">\n            {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.productID}> */}\n              <img\n                className=\"default-img\"\n                src={serverURL + product.image}\n                alt=\"\"\n              />\n              {product.image.length > 1 ? (\n                <img\n                  className=\"hover-img\"\n                  src={serverURL + product.image}\n                  alt=\"\"\n                />\n              ) : (\n                \"\"\n              )}\n            {/* </Link> */}\n            {discount  ? (\n              <div className=\"product-img-badges\">\n                {discount ? (\n                  <span className=\"pink\">-{discount}%</span>\n                ) : (\n                  \"\"\n                )}\n                {/* {product.new ? <span className=\"purple\">New</span> : \"\"} */}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"product-action\">\n              <div className=\"pro-same-action pro-wishlist\">\n                <button\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\n                  disabled={wishlistItem !== undefined}\n                  title={\n                    wishlistItem !== undefined\n                      ? \"Added to wishlist\"\n                      : \"Add to wishlist\"\n                  }\n                  onClick={() => addToWishlist(product, addToast)}\n                >\n                  <i className=\"pe-7s-like\" />\n                </button>\n              </div>\n              <div className=\"pro-same-action pro-cart\">\n                {product.affiliateLink ? (\n                  <a\n                    href={product.affiliateLink}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {\" \"}\n                    Buy now{\" \"}\n                  </a>\n                ) : product.variation && product.variation.length >= 1 ? (\n                  <Link to={`${process.env.PUBLIC_URL}/product/${product.id}`}>\n                    Select Option\n                  </Link>\n                ) : product.stock && product.stock > 0 ? (\n                  <button\n                    onClick={() => addToCart(product, addToast)}\n                    className={\n                      cartItem !== undefined && cartItem.quantity > 0\n                        ? \"active\"\n                        : \"\"\n                    }\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\n                    title={\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\n                    }\n                  >\n                    {\" \"}\n                    <i className=\"pe-7s-cart\"></i>{\" \"}\n                    {cartItem !== undefined && cartItem.quantity > 0\n                      ? \"Added\"\n                      : \"Add to cart\"}\n                  </button>\n                ) : (\n                  <button disabled className=\"active\">\n                    Out of Stock\n                  </button>\n                )}\n              </div>\n              {/* <div className=\"pro-same-action pro-quickview\">\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\n                  <i className=\"pe-7s-look\" />\n                </button>\n              </div> */}\n            </div>\n          </div>\n          <div className=\"product-content text-center\">\n            <h3>\n              {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                {product.productName}\n              {/* </Link> */}\n            </h3>\n            {/* {product.rating && product.rating > 0 ? (\n              <div className=\"product-rating\">\n                <Rating ratingValue={product.rating} />\n              </div>\n            ) : (\n              \"\"\n            )} */}\n            <div className=\"product-price\">\n              {discountedPrice !== null ? (\n                <Fragment>\n                  <span>{currency.currencySymbol + finalDiscountedPrice}</span>{\" \"}\n                  <span className=\"old\">\n                    {currency.currencySymbol + finalProductPrice}\n                  </span>\n                </Fragment>\n              ) : (\n                <span>{currency.currencySymbol + finalProductPrice} </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"shop-list-wrap mb-30\">\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-md-5 col-sm-6\">\n              <div className=\"product-list-image-wrap\">\n                <div className=\"product-img\">\n                  {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                    <img\n                      className=\"default-img img-fluid\"\n                      src={serverURL + product.image}\n                      alt=\"\"\n                    />\n                    {/* {product.image.length > 1 ? (\n                      <img\n                        className=\"hover-img img-fluid\"\n                        src={process.env.PUBLIC_URL + product.image[1]}\n                        alt=\"\"\n                      />\n                    ) : (\n                      \"\"\n                    )} */}\n                  {/* </Link> */}\n                  {discount  ? (\n                    <div className=\"product-img-badges\">\n                      {product.discount ? (\n                        <span className=\"pink\">-{discount}%</span>\n                      ) : (\n                        \"\"\n                      )}\n                      {/* {product.new ? <span className=\"purple\">New</span> : \"\"} */}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-8 col-md-7 col-sm-6\">\n              <div className=\"shop-list-content\">\n                <h3>\n                  {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                    {product.name}\n                  {/* </Link> */}\n                </h3>\n                <div className=\"product-list-price\">\n                  {discountedPrice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finalDiscountedPrice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalProductPrice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalProductPrice} </span>\n                  )}\n                </div>\n                {/* {product.rating && product.rating > 0 ? (\n                  <div className=\"rating-review\">\n                    <div className=\"product-list-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )} */}\n                {product.shortDescription ? (\n                  <p>{product.shortDescription}</p>\n                ) : (\n                  \"\"\n                )}\n\n                <div className=\"shop-list-actions d-flex align-items-center\">\n                  <div className=\"shop-list-btn btn-hover\">\n                    {product.affiliateLink ? (\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        Buy now{\" \"}\n                      </a>\n                    ) : product.variation && product.variation.length >= 1 ? (\n                      <Link\n                        to={`${process.env.PUBLIC_URL}/product/${product.id}`}\n                      >\n                        Select Option\n                      </Link>\n                    ) : product.stock && product.stock > 0 ? (\n                      <button\n                        onClick={() => addToCart(product, addToast)}\n                        className={\n                          cartItem !== undefined && cartItem.quantity > 0\n                            ? \"active\"\n                            : \"\"\n                        }\n                        disabled={\n                          cartItem !== undefined && cartItem.quantity > 0\n                        }\n                        title={\n                          cartItem !== undefined\n                            ? \"Added to cart\"\n                            : \"Add to cart\"\n                        }\n                      >\n                        {\" \"}\n                        <i className=\"pe-7s-cart\"></i>{\" \"}\n                        {cartItem !== undefined && cartItem.quantity > 0\n                          ? \"Added\"\n                          : \"Add to cart\"}\n                      </button>\n                    ) : (\n                      <button disabled className=\"active\">\n                        Out of Stock\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"shop-list-wishlist ml-10\">\n                    <button\n                      className={wishlistItem !== undefined ? \"active\" : \"\"}\n                      disabled={wishlistItem !== undefined}\n                      title={\n                        wishlistItem !== undefined\n                          ? \"Added to wishlist\"\n                          : \"Add to wishlist\"\n                      }\n                      onClick={() => addToWishlist(product, addToast)}\n                    >\n                      <i className=\"pe-7s-like\" />\n                    </button>\n                  </div>\n                  <div className=\"shop-list-compare ml-10\">\n                    <button\n                      className={compareItem !== undefined ? \"active\" : \"\"}\n                      disabled={compareItem !== undefined}\n                      title={\n                        compareItem !== undefined\n                          ? \"Added to compare\"\n                          : \"Add to compare\"\n                      }\n                      onClick={() => addToCompare(product, addToast)}\n                    >\n                      <i className=\"pe-7s-shuffle\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* product modal */}\n      {/* <ProductModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        product={product}\n        currency={currency}\n        discountedprice={discountedPrice}\n        finalproductprice={finalProductPrice}\n        finaldiscountedprice={finalDiscountedPrice}\n        cartitem={cartItem}\n        wishlistitem={wishlistItem}\n        compareitem={compareItem}\n        addtocart={addToCart}\n        addtowishlist={addToWishlist}\n        addtocompare={addToCompare}\n        addtoast={addToast}\n      /> */}\n    </Fragment>\n  );\n};\n\nProductGridListSingle.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItem: PropTypes.object,\n  compareItem: PropTypes.object,\n  currency: PropTypes.object,\n  product: PropTypes.object,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItem: PropTypes.object\n};\n\nexport default ProductGridListSingle;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare } from \"../../redux/actions/compareActions\";\nimport ProductGridListSingle from \"../../components/product/ProductGridListSingle\";\n\nconst ProductGrid = ({\n  products,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n \n  return (\n    <Fragment>\n      {products.map(product => {\n        return (\n          <ProductGridListSingle\n            sliderClassName={sliderClassName}\n            spaceBottomClass={spaceBottomClass}\n            product={product}\n            currency={currency}\n            addToCart={addToCart}\n            addToWishlist={addToWishlist}\n            addToCompare={addToCompare}\n            cartItem={\n              cartItems.filter(cartItem => cartItem.productID === product.productID)[0]\n            }\n            wishlistItem={\n              wishlistItems.filter(\n                wishlistItem => wishlistItem.productID === product.productID\n              )[0]\n            }\n            compareItem={\n              compareItems.filter(\n                compareItem => compareItem.productID === product.productID\n              )[0]\n            }\n            key={product.productID}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nProductGrid.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (\n      item,\n      addToast,\n      quantityCount,\n      selectedProductColor,\n      selectedProductSize\n    ) => {\n      dispatch(\n        addToCart(\n          item,\n          addToast,\n          quantityCount,\n          selectedProductColor,\n          selectedProductSize\n        )\n      );\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ProductgridList from \"./ProductgridList\";\n\nconst ShopProducts = ({ products, layout }) => {\n  return (\n    <div className=\"shop-bottom-area mt-35\">\n      <div className={`row ${layout ? layout : \"\"}`}>\n        <ProductgridList products={products} spaceBottomClass=\"mb-25\" />\n      </div>\n    </div>\n  );\n};\n\nShopProducts.propTypes = {\n  layout: PropTypes.string,\n  products: PropTypes.array\n};\n\nexport default ShopProducts;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport Paginator from 'react-hooks-paginator';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { connect, useSelector } from 'react-redux';\nimport { getSortedProducts } from '../../helpers/product';\nimport LayoutOne from '../../layouts/LayoutOne';\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\nimport ShopProducts from '../../wrappers/product/ShopProducts';\n\nconst ShopGridStandard = ({location,Products,isLogin,SetUserLogin}) => {\n    const [layout, setLayout] = useState('grid three-column');\n    const [sortType, setSortType] = useState('');\n    const [sortValue, setSortValue] = useState('');\n    const [filterSortType, setFilterSortType] = useState('');\n    const [filterSortValue, setFilterSortValue] = useState('');\n    const [offset, setOffset] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentData, setCurrentData] = useState([]);\n    const [sortedProducts, setSortedProducts] = useState([]);\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    const [products, setProducts] = useState([]);\n    const pageLimit = 15;\n    // const {pathname} = location;\n    const ProductData = useSelector(state => {  return state.productData.products });\n    useEffect(() => {\n        setProducts(ProductData);\n    }, [ProductData])\n   \n    const getLayout = (layout) => {\n        setLayout(layout)\n    }\n\n    const getSortParams = (sortType, sortValue) => {\n        setSortType(sortType);\n        setSortValue(sortValue);\n    }\n\n    const getFilterSortParams = (sortType, sortValue) => {\n        setFilterSortType(sortType);\n        setFilterSortValue(sortValue);\n    }\n    const searchResults = (products, key) => {\n        let regex = new RegExp(key,\"i\");\n        let Searchedarray = products.filter(product => regex.test(product.productName));\n        return Searchedarray;\n      }\n    useEffect(() => {\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n        let searchedProducts = searchResults(filterSortedProducts, searchKeyword);\n        sortedProducts = searchedProducts;\n        setSortedProducts(sortedProducts);\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue,searchKeyword]);\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>Flone | Shop Page</title>\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\n            </MetaTags>\n\n            {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem> */}\n\n            <LayoutOne headerTop=\"visible\" isLogin={isLogin} SetUserLogin={SetUserLogin}> \n                {/* breadcrumb */}\n                {/* <Breadcrumb /> */}\n\n                <div className=\"shop-area pt-95 pb-100\">\n                    <div className=\"container\">\n                        <div className=\"row d-flex flex-row flex-wrap-reverse\">\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\n                                {/* shop sidebar */}\n                                <ShopSidebar\n                                 setSearchKeyword={setSearchKeyword}    products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\" />\n                            </div>\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\n                                {/* shop topbar default */}\n                                <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} />\n\n                                {/* shop page content default */}\n                                <ShopProducts layout={layout} products={currentData} />\n\n                                {/* shop product pagination */}\n                                <div className=\"pro-pagination-style text-center mt-30\">\n                                    <Paginator\n                                        totalRecords={sortedProducts.length}\n                                        pageLimit={pageLimit}\n                                        pageNeighbours={2}\n                                        setOffset={setOffset}\n                                        currentPage={currentPage}\n                                        setCurrentPage={setCurrentPage}\n                                        pageContainerClass=\"mb-0 mt-0\"\n                                        pagePrevText=\"«\"\n                                        pageNextText=\"»\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </LayoutOne>\n        </Fragment>\n    )\n}\n\nShopGridStandard.propTypes = {\n  location: PropTypes.object,\n  products: PropTypes.array\n}\n\nconst mapStateToProps = state => {\n \n    return{\n        products: state.productData.products\n    }\n}\n\nexport default connect(mapStateToProps)(ShopGridStandard);"],"sourceRoot":""}