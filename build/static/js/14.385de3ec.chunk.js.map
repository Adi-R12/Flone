{"version":3,"sources":["components/product/sub-components/ProductRating.js","components/product/ProductModal.js","components/product/ShopSearch.js","components/product/ShopCategories.js","wrappers/product/ShopSidebar.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ProductGridListSingle.js","wrappers/product/ProductgridList.js","wrappers/product/ShopProducts.js","pages/shop/ShopGridStandard.js"],"names":["ProductRating","_ref","ratingValue","rating","i","push","React","createElement","className","key","Fragment","connect","state","cartitems","cartData","props","product","currency","discountedprice","finalproductprice","finaldiscountedprice","_useState","useState","_useState2","_slicedToArray","gallerySwiper","getGallerySwiper","_useState3","_useState4","thumbnailSwiper","getThumbnailSwiper","_useState5","variation","color","_useState6","selectedProductColor","setSelectedProductColor","_useState7","size","name","_useState8","selectedProductSize","setSelectedProductSize","_useState9","stock","_useState10","productStock","setProductStock","_useState11","_useState12","quantityCount","setQuantityCount","wishlistItem","wishlistitem","compareItem","compareitem","addToCart","addtocart","addToWishlist","addtowishlist","addToCompare","addtocompare","addToast","addtoast","cartItems","productCartQty","getProductCartQty","useEffect","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","Modal","show","onHide","Header","closeButton","Swiper","image","map","single","src","process","alt","currencySymbol","Rating","shortDescription","concat","type","value","checked","onChange","singleSize","affiliateLink","href","rel","target","onClick","readOnly","disabled","undefined","title","ShopSearch","setSearchKeyword","action","e","placeholder","ShopCategories","categories","getSortParams","setActiveSort","category","ShopSidebar","products","sideSpaceClass","uniqueCategories","getUniqueCategories","getUniqueColors","getProductsUniqueSizes","getUniqueTags","ShopTopAction","getLayout","getFilterSortParams","productCount","sortedProductCount","setActiveLayout","ShopTopbar","serverURL","ProductGridListSingle","cartItem","sliderClassName","spaceBottomClass","useToasts","discountedPrice","discount","price","Math","floor","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","length","Link","to","id","quantity","productName","currencyData","wishlistItems","wishlistData","compareItems","compareData","dispatch","item","filter","productID","ShopProducts","layout","ProductgridList","productData","location","Products","isLogin","SetUserLogin","setLayout","sortType","setSortType","sortValue","setSortValue","filterSortType","setFilterSortType","filterSortValue","setFilterSortValue","offset","setOffset","_useState13","_useState14","currentPage","setCurrentPage","_useState15","_useState16","currentData","setCurrentData","_useState17","_useState18","sortedProducts","setSortedProducts","_useState19","_useState20","searchKeyword","_useState21","_useState22","setProducts","ProductData","useSelector","getSortedProducts","searchedProducts","regex","RegExp","test","searchResults","slice","MetaTags","content","LayoutOne","headerTop","Paginator","totalRecords","pageLimit","pageNeighbours","pageContainerClass","pagePrevText","pageNextText"],"mappings":"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","file":"static/js/14.385de3ec.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\n\nconst ProductRating = ({ ratingValue }) => {\n  let rating = [];\n\n  for (let i = 0; i < 5; i++) {\n    rating.push(<i className=\"fa fa-star-o\" key={i}></i>);\n  }\n  if (ratingValue && ratingValue > 0) {\n    for (let i = 0; i <= ratingValue - 1; i++) {\n      rating[i] = <i className=\"fa fa-star-o yellow\" key={i}></i>;\n    }\n  }\n  return <Fragment>{rating}</Fragment>;\n};\n\nProductRating.propTypes = {\n  ratingValue: PropTypes.number\n};\n\nexport default ProductRating;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Swiper from \"react-id-swiper\";\nimport { getProductCartQty } from \"../../helpers/product\";\nimport { Modal } from \"react-bootstrap\";\nimport Rating from \"./sub-components/ProductRating\";\nimport { connect } from \"react-redux\";\n\nfunction ProductModal(props) {\n  const { product } = props;\n  const { currency } = props;\n  const { discountedprice } = props;\n  const { finalproductprice } = props;\n  const { finaldiscountedprice } = props;\n\n  const [gallerySwiper, getGallerySwiper] = useState(null);\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\n  const [selectedProductColor, setSelectedProductColor] = useState(\n    product.variation ? product.variation[0].color : \"\"\n  );\n  const [selectedProductSize, setSelectedProductSize] = useState(\n    product.variation ? product.variation[0].size[0].name : \"\"\n  );\n  const [productStock, setProductStock] = useState(\n    product.variation ? product.variation[0].size[0].stock : product.stock\n  );\n  const [quantityCount, setQuantityCount] = useState(1);\n\n  const wishlistItem = props.wishlistitem;\n  const compareItem = props.compareitem;\n\n  const addToCart = props.addtocart;\n  const addToWishlist = props.addtowishlist;\n  const addToCompare = props.addtocompare;\n\n  const addToast = props.addtoast;\n  const cartItems = props.cartitems;\n\n  const productCartQty = getProductCartQty(\n    cartItems,\n    product,\n    selectedProductColor,\n    selectedProductSize\n  );\n\n  useEffect(() => {\n    if (\n      gallerySwiper !== null &&\n      gallerySwiper.controller &&\n      thumbnailSwiper !== null &&\n      thumbnailSwiper.controller\n    ) {\n      gallerySwiper.controller.control = thumbnailSwiper;\n      thumbnailSwiper.controller.control = gallerySwiper;\n    }\n  }, [gallerySwiper, thumbnailSwiper]);\n\n  const gallerySwiperParams = {\n    getSwiper: getGallerySwiper,\n    spaceBetween: 10,\n    loopedSlides: 4,\n    loop: true\n  };\n\n  const thumbnailSwiperParams = {\n    getSwiper: getThumbnailSwiper,\n    spaceBetween: 10,\n    slidesPerView: 4,\n    loopedSlides: 4,\n    touchRatio: 0.2,\n    freeMode: true,\n    loop: true,\n    slideToClickedSlide: true,\n    navigation: {\n      nextEl: \".swiper-button-next\",\n      prevEl: \".swiper-button-prev\"\n    },\n    renderPrevButton: () => (\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-left\" />\n      </button>\n    ),\n    renderNextButton: () => (\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\n        <i className=\"pe-7s-angle-right\" />\n      </button>\n    )\n  };\n\n  return (\n    <Fragment>\n      <Modal\n        show={props.show}\n        onHide={props.onHide}\n        className=\"product-quickview-modal-wrapper\"\n      >\n        <Modal.Header closeButton></Modal.Header>\n\n        <div className=\"modal-body\">\n          <div className=\"row\">\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\n              <div className=\"product-large-image-wrapper\">\n                <Swiper {...gallerySwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n              <div className=\"product-small-image-wrapper mt-15\">\n                <Swiper {...thumbnailSwiperParams}>\n                  {product.image &&\n                    product.image.map((single, key) => {\n                      return (\n                        <div key={key}>\n                          <div className=\"single-image\">\n                            <img\n                              src={process.env.PUBLIC_URL + single}\n                              className=\"img-fluid\"\n                              alt=\"\"\n                            />\n                          </div>\n                        </div>\n                      );\n                    })}\n                </Swiper>\n              </div>\n            </div>\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\n              <div className=\"product-details-content quickview-content\">\n                <h2>{product.name}</h2>\n                <div className=\"product-details-price\">\n                  {discountedprice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finaldiscountedprice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalproductprice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalproductprice} </span>\n                  )}\n                </div>\n                {product.rating && product.rating > 0 ? (\n                  <div className=\"pro-details-rating-wrap\">\n                    <div className=\"pro-details-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                <div className=\"pro-details-list\">\n                  <p>{product.shortDescription}</p>\n                </div>\n\n                {product.variation ? (\n                  <div className=\"pro-details-size-color\">\n                    <div className=\"pro-details-color-wrap\">\n                      <span>Color</span>\n                      <div className=\"pro-details-color-content\">\n                        {product.variation.map((single, key) => {\n                          return (\n                            <label\n                              className={`pro-details-color-content--single ${single.color}`}\n                              key={key}\n                            >\n                              <input\n                                type=\"radio\"\n                                value={single.color}\n                                name=\"product-color\"\n                                checked={\n                                  single.color === selectedProductColor\n                                    ? \"checked\"\n                                    : \"\"\n                                }\n                                onChange={() => {\n                                  setSelectedProductColor(single.color);\n                                  setSelectedProductSize(single.size[0].name);\n                                  setProductStock(single.size[0].stock);\n                                  setQuantityCount(1);\n                                }}\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          );\n                        })}\n                      </div>\n                    </div>\n                    <div className=\"pro-details-size\">\n                      <span>Size</span>\n                      <div className=\"pro-details-size-content\">\n                        {product.variation &&\n                          product.variation.map(single => {\n                            return single.color === selectedProductColor\n                              ? single.size.map((singleSize, key) => {\n                                  return (\n                                    <label\n                                      className={`pro-details-size-content--single`}\n                                      key={key}\n                                    >\n                                      <input\n                                        type=\"radio\"\n                                        value={singleSize.name}\n                                        checked={\n                                          singleSize.name ===\n                                          selectedProductSize\n                                            ? \"checked\"\n                                            : \"\"\n                                        }\n                                        onChange={() => {\n                                          setSelectedProductSize(\n                                            singleSize.name\n                                          );\n                                          setProductStock(singleSize.stock);\n                                          setQuantityCount(1);\n                                        }}\n                                      />\n                                      <span className=\"size-name\">\n                                        {singleSize.name}\n                                      </span>\n                                    </label>\n                                  );\n                                })\n                              : \"\";\n                          })}\n                      </div>\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )}\n                {product.affiliateLink ? (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"pro-details-cart btn-hover\">\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        Buy Now\n                      </a>\n                    </div>\n                  </div>\n                ) : (\n                  <div className=\"pro-details-quality\">\n                    <div className=\"cart-plus-minus\">\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount > 1 ? quantityCount - 1 : 1\n                          )\n                        }\n                        className=\"dec qtybutton\"\n                      >\n                        -\n                      </button>\n                      <input\n                        className=\"cart-plus-minus-box\"\n                        type=\"text\"\n                        value={quantityCount}\n                        readOnly\n                      />\n                      <button\n                        onClick={() =>\n                          setQuantityCount(\n                            quantityCount < productStock - productCartQty\n                              ? quantityCount + 1\n                              : quantityCount\n                          )\n                        }\n                        className=\"inc qtybutton\"\n                      >\n                        +\n                      </button>\n                    </div>\n                    <div className=\"pro-details-cart btn-hover\">\n                      {productStock && productStock > 0 ? (\n                        <button\n                          onClick={() =>\n                            addToCart(\n                              product,\n                              addToast,\n                              quantityCount,\n                              selectedProductColor,\n                              selectedProductSize\n                            )\n                          }\n                          disabled={productCartQty >= productStock}\n                        >\n                          {\" \"}\n                          Add To Cart{\" \"}\n                        </button>\n                      ) : (\n                        <button disabled>Out of Stock</button>\n                      )}\n                    </div>\n                    <div className=\"pro-details-wishlist\">\n                      <button\n                        className={wishlistItem !== undefined ? \"active\" : \"\"}\n                        disabled={wishlistItem !== undefined}\n                        title={\n                          wishlistItem !== undefined\n                            ? \"Added to wishlist\"\n                            : \"Add to wishlist\"\n                        }\n                        onClick={() => addToWishlist(product, addToast)}\n                      >\n                        <i className=\"pe-7s-like\" />\n                      </button>\n                    </div>\n                    <div className=\"pro-details-compare\">\n                      <button\n                        className={compareItem !== undefined ? \"active\" : \"\"}\n                        disabled={compareItem !== undefined}\n                        title={\n                          compareItem !== undefined\n                            ? \"Added to compare\"\n                            : \"Add to compare\"\n                        }\n                        onClick={() => addToCompare(product, addToast)}\n                      >\n                        <i className=\"pe-7s-shuffle\" />\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </Fragment>\n  );\n}\n\nProductModal.propTypes = {\n  addtoast: PropTypes.func,\n  addtocart: PropTypes.func,\n  addtocompare: PropTypes.func,\n  addtowishlist: PropTypes.func,\n  cartitems: PropTypes.array,\n  compareitem: PropTypes.object,\n  currency: PropTypes.object,\n  discountedprice: PropTypes.number,\n  finaldiscountedprice: PropTypes.number,\n  finalproductprice: PropTypes.number,\n  onHide: PropTypes.func,\n  product: PropTypes.object,\n  show: PropTypes.bool,\n  wishlistitem: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartitems: state.cartData\n  };\n};\n\nexport default connect(mapStateToProps)(ProductModal);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst ShopSearch = ({ setSearchKeyword }) => {\n  const keywordHandler = (e) => {\n    setSearchKeyword(e.target.value);\n  }\n  return (\n    <div className=\"sidebar-widget\">\n      <h4 className=\"pro-sidebar-title\">Search </h4>\n      <div className=\"pro-sidebar-search mb-50 mt-25\">\n        <form className=\"pro-sidebar-search-form\" action=\"#\">\n          <input type=\"text\" onChange={keywordHandler} placeholder=\"Search here...\" />\n          <button>\n            <i className=\"pe-7s-search\" />\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\nShopSearch.propTypes = {\n  setSearchKeyword:PropTypes.func\n};\nexport default ShopSearch;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { setActiveSort } from \"../../helpers/product\";\n\nconst ShopCategories = ({ categories, getSortParams }) => {\n  return (\n    <div className=\"sidebar-widget\">\n      <h4 className=\"pro-sidebar-title\">Categories </h4>\n      <div className=\"sidebar-widget-list mt-30\">\n        {categories ? (\n          <ul>\n            <li>\n              <div className=\"sidebar-widget-list-left\">\n                <button\n                  onClick={e => {\n                    getSortParams(\"category\", \"\");\n                    setActiveSort(e);\n                  }}\n                >\n                  <span className=\"checkmark\" /> All Categories\n                </button>\n              </div>\n            </li>\n            {categories.map((category, key) => {\n              return (\n                <li key={key}>\n                  <div className=\"sidebar-widget-list-left\">\n                    <button\n                      onClick={e => {\n                        getSortParams(\"category\", category);\n                        setActiveSort(e);\n                      }}\n                    >\n                      {\" \"}\n                      <span className=\"checkmark\" /> {category}{\" \"}\n                    </button>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          \"No categories found\"\n        )}\n      </div>\n    </div>\n  );\n};\n\nShopCategories.propTypes = {\n  categories: PropTypes.array,\n  getSortParams: PropTypes.func\n};\n\nexport default ShopCategories;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport {\n  getUniqueCategories,\n  getUniqueTags,\n  getUniqueColors,\n  getProductsUniqueSizes\n} from \"../../helpers/product\";\nimport ShopSearch from \"../../components/product/ShopSearch\";\nimport ShopCategories from \"../../components/product/ShopCategories\";\nimport ShopColor from \"../../components/product/ShopColor\";\nimport ShopSize from \"../../components/product/ShopSize\";\nimport ShopTag from \"../../components/product/ShopTag\";\n\nconst ShopSidebar = ({ products,setSearchKeyword, getSortParams, sideSpaceClass }) => {\n  const uniqueCategories = getUniqueCategories(products);\n  const uniqueColors = getUniqueColors(products);\n  const uniqueSizes = getProductsUniqueSizes(products);\n  const uniqueTags = getUniqueTags(products);\n\n  return (\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\n      {/* shop search */}\n      <ShopSearch\n        setSearchKeyword={setSearchKeyword}\n      />\n\n      {/* filter by categories */}\n      <ShopCategories\n        categories={uniqueCategories}\n        getSortParams={getSortParams}\n      />\n\n      {/* filter by color */}\n   {/* {   <ShopColor colors={uniqueColors} getSortParams={getSortParams} />} */}\n\n      {/* filter by size */}\n      {/* <ShopSize sizes={uniqueSizes} getSortParams={getSortParams} /> */}\n\n      {/* filter by tag */}\n      {/* <ShopTag tags={uniqueTags} getSortParams={getSortParams} /> */}\n    </div>\n  );\n};\n\nShopSidebar.propTypes = {\n  getSortParams: PropTypes.func,\n  setSearchKeyword:PropTypes.func,\n  products: PropTypes.array,\n  sideSpaceClass: PropTypes.string\n};\n\nexport default ShopSidebar;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { setActiveLayout } from \"../../helpers/product\";\n\nconst ShopTopAction = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <div className=\"shop-top-bar mb-35\">\n      <div className=\"select-shoing-wrap\">\n        <div className=\"shop-select\">\n          <select\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\n          >\n            <option value=\"default\">Default</option>\n            <option value=\"priceHighToLow\">Price - High to Low</option>\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\n          </select>\n        </div>\n        <p>\n          Showing {sortedProductCount} of {productCount} result\n        </p>\n      </div>\n\n      <div className=\"shop-tab\">\n        <button\n          onClick={e => {\n            getLayout(\"grid two-column\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-th-large\" />\n        </button>\n        <button\n          onClick={e => {\n            getLayout(\"grid three-column\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-th\" />\n        </button>\n        <button\n          onClick={e => {\n            getLayout(\"list\");\n            setActiveLayout(e);\n          }}\n        >\n          <i className=\"fa fa-list-ul\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nShopTopAction.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopAction;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\n\nconst ShopTopbar = ({\n  getLayout,\n  getFilterSortParams,\n  productCount,\n  sortedProductCount\n}) => {\n  return (\n    <Fragment>\n      {/* shop top action */}\n      <ShopTopAction\n        getLayout={getLayout}\n        getFilterSortParams={getFilterSortParams}\n        productCount={productCount}\n        sortedProductCount={sortedProductCount}\n      />\n    </Fragment>\n  );\n};\n\nShopTopbar.propTypes = {\n  getFilterSortParams: PropTypes.func,\n  getLayout: PropTypes.func,\n  productCount: PropTypes.number,\n  sortedProductCount: PropTypes.number\n};\n\nexport default ShopTopbar;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport Rating from \"./sub-components/ProductRating\";\nimport ProductModal from \"./ProductModal\";\nimport \"../../assets/css/extras.css\";\nconst serverURL = \"http://localhost:9000/static/\";\n// const serverURL = \"https://infinite-sands-08332.herokuapp.com/static/\";\nconst ProductGridListSingle = ({\n  product,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItem,\n  wishlistItem,\n  compareItem,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n  const [modalShow, setModalShow] = useState(false);\n  const { addToast } = useToasts();\n\n  // const discountedPrice = getDiscountPrice(product.price, product.discount);\n  const discountedPrice = product.discountedPrice;\n  let discount =100- (discountedPrice / product.price) * 100;\n  discount = Math.floor(discount);\n  const finalProductPrice = +(product.price * currency.currencyRate).toFixed(2);\n  const finalDiscountedPrice = +(\n    discountedPrice * currency.currencyRate\n  ).toFixed(2);\n\n  return (\n    <Fragment>\n      <div\n        className={`col-xl-4 col-sm-6 ${\n          sliderClassName ? sliderClassName : \"\"\n        }`}\n      >\n        <div\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\n        >\n          <div className=\"product-img\">\n            {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.productID}> */}\n              <img\n                className=\"default-img\"\n                src={serverURL + product.image}\n                alt=\"\"\n              />\n              {product.image.length > 1 ? (\n                <img\n                  className=\"hover-img\"\n                  src={serverURL + product.image}\n                  alt=\"\"\n                />\n              ) : (\n                \"\"\n              )}\n            {/* </Link> */}\n            {discount  ? (\n              <div className=\"product-img-badges\">\n                {discount ? (\n                  <span className=\"pink\">-{discount}%</span>\n                ) : (\n                  \"\"\n                )}\n                {/* {product.new ? <span className=\"purple\">New</span> : \"\"} */}\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            <div className=\"product-action\">\n              <div className=\"pro-same-action pro-wishlist\">\n                <button\n                  className={wishlistItem !== undefined ? \"active\" : \"\"}\n                  disabled={wishlistItem !== undefined}\n                  title={\n                    wishlistItem !== undefined\n                      ? \"Added to wishlist\"\n                      : \"Add to wishlist\"\n                  }\n                  onClick={() => addToWishlist(product, addToast)}\n                >\n                  <i className=\"pe-7s-like\" />\n                </button>\n              </div>\n              <div className=\"pro-same-action pro-cart\">\n                {product.affiliateLink ? (\n                  <a\n                    href={product.affiliateLink}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    {\" \"}\n                    Buy now{\" \"}\n                  </a>\n                ) : product.variation && product.variation.length >= 1 ? (\n                  <Link to={`${process.env.PUBLIC_URL}/product/${product.id}`}>\n                    Select Option\n                  </Link>\n                ) : product.stock && product.stock > 0 ? (\n                  <button\n                    onClick={() => addToCart(product, addToast)}\n                    className={\n                      cartItem !== undefined && cartItem.quantity > 0\n                        ? \"active\"\n                        : \"\"\n                    }\n                    disabled={cartItem !== undefined && cartItem.quantity > 0}\n                    title={\n                      cartItem !== undefined ? \"Added to cart\" : \"Add to cart\"\n                    }\n                  >\n                    {\" \"}\n                    <i className=\"pe-7s-cart\"></i>{\" \"}\n                    {cartItem !== undefined && cartItem.quantity > 0\n                      ? \"Added\"\n                      : \"Add to cart\"}\n                  </button>\n                ) : (\n                  <button disabled className=\"active\">\n                    Out of Stock\n                  </button>\n                )}\n              </div>\n              {/* <div className=\"pro-same-action pro-quickview\">\n                <button onClick={() => setModalShow(true)} title=\"Quick View\">\n                  <i className=\"pe-7s-look\" />\n                </button>\n              </div> */}\n            </div>\n          </div>\n          <div className=\"product-content text-center\">\n            <h3>\n              {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                {product.productName}\n              {/* </Link> */}\n            </h3>\n            {/* {product.rating && product.rating > 0 ? (\n              <div className=\"product-rating\">\n                <Rating ratingValue={product.rating} />\n              </div>\n            ) : (\n              \"\"\n            )} */}\n            <div className=\"product-price\">\n              {discountedPrice !== null ? (\n                <Fragment>\n                  <span>{currency.currencySymbol + finalDiscountedPrice}</span>{\" \"}\n                  <span className=\"old\">\n                    {currency.currencySymbol + finalProductPrice}\n                  </span>\n                </Fragment>\n              ) : (\n                <span>{currency.currencySymbol + finalProductPrice} </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"shop-list-wrap mb-30\">\n          <div className=\"row\">\n            <div className=\"col-xl-4 col-md-5 col-sm-6\">\n              <div className=\"product-list-image-wrap\">\n                <div className=\"product-img\">\n                  {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                    <img\n                      className=\"default-img img-fluid\"\n                      src={serverURL + product.image}\n                      alt=\"\"\n                    />\n                    {/* {product.image.length > 1 ? (\n                      <img\n                        className=\"hover-img img-fluid\"\n                        src={process.env.PUBLIC_URL + product.image[1]}\n                        alt=\"\"\n                      />\n                    ) : (\n                      \"\"\n                    )} */}\n                  {/* </Link> */}\n                  {discount  ? (\n                    <div className=\"product-img-badges\">\n                      {product.discount ? (\n                        <span className=\"pink\">-{discount}%</span>\n                      ) : (\n                        \"\"\n                      )}\n                      {/* {product.new ? <span className=\"purple\">New</span> : \"\"} */}\n                    </div>\n                  ) : (\n                    \"\"\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-xl-8 col-md-7 col-sm-6\">\n              <div className=\"shop-list-content\">\n                <h3>\n                  {/* <Link to={process.env.PUBLIC_URL + \"/product/\" + product.id}> */}\n                    {product.name}\n                  {/* </Link> */}\n                </h3>\n                <div className=\"product-list-price\">\n                  {discountedPrice !== null ? (\n                    <Fragment>\n                      <span>\n                        {currency.currencySymbol + finalDiscountedPrice}\n                      </span>{\" \"}\n                      <span className=\"old\">\n                        {currency.currencySymbol + finalProductPrice}\n                      </span>\n                    </Fragment>\n                  ) : (\n                    <span>{currency.currencySymbol + finalProductPrice} </span>\n                  )}\n                </div>\n                {/* {product.rating && product.rating > 0 ? (\n                  <div className=\"rating-review\">\n                    <div className=\"product-list-rating\">\n                      <Rating ratingValue={product.rating} />\n                    </div>\n                  </div>\n                ) : (\n                  \"\"\n                )} */}\n                {product.shortDescription ? (\n                  <p>{product.shortDescription}</p>\n                ) : (\n                  \"\"\n                )}\n\n                <div className=\"shop-list-actions d-flex align-items-center\">\n                  <div className=\"shop-list-btn btn-hover\">\n                    {product.affiliateLink ? (\n                      <a\n                        href={product.affiliateLink}\n                        rel=\"noopener noreferrer\"\n                        target=\"_blank\"\n                      >\n                        {\" \"}\n                        Buy now{\" \"}\n                      </a>\n                    ) : product.variation && product.variation.length >= 1 ? (\n                      <Link\n                        to={`${process.env.PUBLIC_URL}/product/${product.id}`}\n                      >\n                        Select Option\n                      </Link>\n                    ) : product.stock && product.stock > 0 ? (\n                      <button\n                        onClick={() => addToCart(product, addToast)}\n                        className={\n                          cartItem !== undefined && cartItem.quantity > 0\n                            ? \"active\"\n                            : \"\"\n                        }\n                        disabled={\n                          cartItem !== undefined && cartItem.quantity > 0\n                        }\n                        title={\n                          cartItem !== undefined\n                            ? \"Added to cart\"\n                            : \"Add to cart\"\n                        }\n                      >\n                        {\" \"}\n                        <i className=\"pe-7s-cart\"></i>{\" \"}\n                        {cartItem !== undefined && cartItem.quantity > 0\n                          ? \"Added\"\n                          : \"Add to cart\"}\n                      </button>\n                    ) : (\n                      <button disabled className=\"active\">\n                        Out of Stock\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"shop-list-wishlist ml-10\">\n                    <button\n                      className={wishlistItem !== undefined ? \"active\" : \"\"}\n                      disabled={wishlistItem !== undefined}\n                      title={\n                        wishlistItem !== undefined\n                          ? \"Added to wishlist\"\n                          : \"Add to wishlist\"\n                      }\n                      onClick={() => addToWishlist(product, addToast)}\n                    >\n                      <i className=\"pe-7s-like\" />\n                    </button>\n                  </div>\n                  <div className=\"shop-list-compare ml-10\">\n                    <button\n                      className={compareItem !== undefined ? \"active\" : \"\"}\n                      disabled={compareItem !== undefined}\n                      title={\n                        compareItem !== undefined\n                          ? \"Added to compare\"\n                          : \"Add to compare\"\n                      }\n                      onClick={() => addToCompare(product, addToast)}\n                    >\n                      <i className=\"pe-7s-shuffle\" />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* product modal */}\n      {/* <ProductModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        product={product}\n        currency={currency}\n        discountedprice={discountedPrice}\n        finalproductprice={finalProductPrice}\n        finaldiscountedprice={finalDiscountedPrice}\n        cartitem={cartItem}\n        wishlistitem={wishlistItem}\n        compareitem={compareItem}\n        addtocart={addToCart}\n        addtowishlist={addToWishlist}\n        addtocompare={addToCompare}\n        addtoast={addToast}\n      /> */}\n    </Fragment>\n  );\n};\n\nProductGridListSingle.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItem: PropTypes.object,\n  compareItem: PropTypes.object,\n  currency: PropTypes.object,\n  product: PropTypes.object,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItem: PropTypes.object\n};\n\nexport default ProductGridListSingle;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport { addToWishlist } from \"../../redux/actions/wishlistActions\";\nimport { addToCompare } from \"../../redux/actions/compareActions\";\nimport ProductGridListSingle from \"../../components/product/ProductGridListSingle\";\n\nconst ProductGrid = ({\n  products,\n  currency,\n  addToCart,\n  addToWishlist,\n  addToCompare,\n  cartItems,\n  wishlistItems,\n  compareItems,\n  sliderClassName,\n  spaceBottomClass\n}) => {\n \n  return (\n    <Fragment>\n      {products.map(product => {\n        return (\n          <ProductGridListSingle\n            sliderClassName={sliderClassName}\n            spaceBottomClass={spaceBottomClass}\n            product={product}\n            currency={currency}\n            addToCart={addToCart}\n            addToWishlist={addToWishlist}\n            addToCompare={addToCompare}\n            cartItem={\n              cartItems.filter(cartItem => cartItem.productID === product.productID)[0]\n            }\n            wishlistItem={\n              wishlistItems.filter(\n                wishlistItem => wishlistItem.productID === product.productID\n              )[0]\n            }\n            compareItem={\n              compareItems.filter(\n                compareItem => compareItem.productID === product.productID\n              )[0]\n            }\n            key={product.productID}\n          />\n        );\n      })}\n    </Fragment>\n  );\n};\n\nProductGrid.propTypes = {\n  addToCart: PropTypes.func,\n  addToCompare: PropTypes.func,\n  addToWishlist: PropTypes.func,\n  cartItems: PropTypes.array,\n  compareItems: PropTypes.array,\n  currency: PropTypes.object,\n  products: PropTypes.array,\n  sliderClassName: PropTypes.string,\n  spaceBottomClass: PropTypes.string,\n  wishlistItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    currency: state.currencyData,\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    compareItems: state.compareData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (\n      item,\n      addToast,\n      quantityCount,\n      selectedProductColor,\n      selectedProductSize\n    ) => {\n      dispatch(\n        addToCart(\n          item,\n          addToast,\n          quantityCount,\n          selectedProductColor,\n          selectedProductSize\n        )\n      );\n    },\n    addToWishlist: (item, addToast) => {\n      dispatch(addToWishlist(item, addToast));\n    },\n    addToCompare: (item, addToast) => {\n      dispatch(addToCompare(item, addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport ProductgridList from \"./ProductgridList\";\n\nconst ShopProducts = ({ products, layout }) => {\n  return (\n    <div className=\"shop-bottom-area mt-35\">\n      <div className={`row ${layout ? layout : \"\"}`}>\n        <ProductgridList products={products} spaceBottomClass=\"mb-25\" />\n      </div>\n    </div>\n  );\n};\n\nShopProducts.propTypes = {\n  layout: PropTypes.string,\n  products: PropTypes.array\n};\n\nexport default ShopProducts;\n","import PropTypes from \"prop-types\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaTags from 'react-meta-tags';\nimport Paginator from 'react-hooks-paginator';\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\nimport { connect, useSelector } from 'react-redux';\nimport { getSortedProducts } from '../../helpers/product';\nimport LayoutOne from '../../layouts/LayoutOne';\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\nimport ShopProducts from '../../wrappers/product/ShopProducts';\n\nconst ShopGridStandard = ({location,Products,isLogin,SetUserLogin}) => {\n    const [layout, setLayout] = useState('grid three-column');\n    const [sortType, setSortType] = useState('');\n    const [sortValue, setSortValue] = useState('');\n    const [filterSortType, setFilterSortType] = useState('');\n    const [filterSortValue, setFilterSortValue] = useState('');\n    const [offset, setOffset] = useState(0);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [currentData, setCurrentData] = useState([]);\n    const [sortedProducts, setSortedProducts] = useState([]);\n    const [searchKeyword, setSearchKeyword] = useState(\"\");\n    const [products, setProducts] = useState([]);\n    const pageLimit = 15;\n    // const {pathname} = location;\n    const ProductData = useSelector(state => {  return state.productData.products });\n    useEffect(() => {\n        setProducts(ProductData);\n    }, [ProductData])\n   \n    const getLayout = (layout) => {\n        setLayout(layout)\n    }\n\n    const getSortParams = (sortType, sortValue) => {\n        setSortType(sortType);\n        setSortValue(sortValue);\n    }\n\n    const getFilterSortParams = (sortType, sortValue) => {\n        setFilterSortType(sortType);\n        setFilterSortValue(sortValue);\n    }\n    const searchResults = (products, key) => {\n        let regex = new RegExp(key,\"i\");\n        let Searchedarray = products.filter(product => regex.test(product.productName));\n        return Searchedarray;\n      }\n    useEffect(() => {\n        let sortedProducts = getSortedProducts(products, sortType, sortValue);\n        const filterSortedProducts = getSortedProducts(sortedProducts, filterSortType, filterSortValue);\n        let searchedProducts = searchResults(filterSortedProducts, searchKeyword);\n        sortedProducts = searchedProducts;\n        setSortedProducts(sortedProducts);\n        setCurrentData(sortedProducts.slice(offset, offset + pageLimit));\n    }, [offset, products, sortType, sortValue, filterSortType, filterSortValue,searchKeyword]);\n\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>Flone | Shop Page</title>\n                <meta name=\"description\" content=\"Shop page of flone react minimalist eCommerce template.\" />\n            </MetaTags>\n\n            {/* <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>Home</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>Shop</BreadcrumbsItem> */}\n\n            <LayoutOne headerTop=\"visible\" isLogin={isLogin} SetUserLogin={SetUserLogin}> \n                {/* breadcrumb */}\n                {/* <Breadcrumb /> */}\n\n                <div className=\"shop-area pt-95 pb-100\">\n                    <div className=\"container\">\n                        <div className=\"row d-flex flex-row flex-wrap-reverse\">\n                            <div className=\"col-lg-3 order-2 order-lg-1\">\n                                {/* shop sidebar */}\n                                <ShopSidebar\n                                 setSearchKeyword={setSearchKeyword}    products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\" />\n                            </div>\n                            <div className=\"col-lg-9 order-1 order-lg-2\">\n                                {/* shop topbar default */}\n                                <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={currentData.length} />\n\n                                {/* shop page content default */}\n                                <ShopProducts layout={layout} products={currentData} />\n\n                                {/* shop product pagination */}\n                                <div className=\"pro-pagination-style text-center mt-30\">\n                                    <Paginator\n                                        totalRecords={sortedProducts.length}\n                                        pageLimit={pageLimit}\n                                        pageNeighbours={2}\n                                        setOffset={setOffset}\n                                        currentPage={currentPage}\n                                        setCurrentPage={setCurrentPage}\n                                        pageContainerClass=\"mb-0 mt-0\"\n                                        pagePrevText=\"«\"\n                                        pageNextText=\"»\"\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </LayoutOne>\n        </Fragment>\n    )\n}\n\nShopGridStandard.propTypes = {\n  location: PropTypes.object,\n  products: PropTypes.array\n}\n\nconst mapStateToProps = state => {\n \n    return{\n        products: state.productData.products\n    }\n}\n\nexport default connect(mapStateToProps)(ShopGridStandard);"],"sourceRoot":""}