{"version":3,"sources":["pages/other/Checkout.js"],"names":["connect","state","cartItems","cartData","currency","currencyData","dispatch","removeAllFromCart","decrementProduct","newStock","_ref","user","location","isLogin","SetUserLogin","pathname","addToast","useToasts","cartTotalPrice","_useState","useState","name","_useState2","_slicedToArray","setName","_useState3","_useState4","deliverOption","setDeliverOption","_useState5","address","_useState6","setAddress","_useState7","number","_useState8","phone","setPhone","_useState9","email","_useState10","setEmail","_useState11","_useState12","note","setNote","history","useHistory","React","createElement","Fragment","MetaTags","content","BreadcrumbsItem","to","process","LayoutOne","headerTop","Breadcrumb","className","length","type","onChange","e","target","value","placeholder","map","cartItem","key","discountedPrice","finalProductPrice","price","currencyRate","toFixed","finalDiscountedPrice","quantity","productName","currencySymbol","onClick","emailPattern","RegExp","emailPattern2","emailPattern3","valid","validityof","trim","test","i","concat","appearance","autoDismiss","isValid","orderData","userID","products","status","axios","post","then","res","console","log","_id","stock","push","Link"],"mappings":"2QA2TeA,6BAhBS,SAAAC,GACtB,MAAO,CACLC,UAAWD,EAAME,SACjBC,SAAUH,EAAMI,iBAGO,SAAAC,GACzB,MAAO,CACLC,kBAAmB,WACjBD,EAASC,gBAEXC,iBAAkB,SAACC,GACjBH,EAASE,YAAiBC,QAIjBT,EA3SE,SAAHU,GAAwG,IAAnGC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAAUV,EAASQ,EAATR,UAAWE,EAAQM,EAARN,SAASS,EAAOH,EAAPG,QAAQC,EAAYJ,EAAZI,aAAaP,EAAiBG,EAAjBH,kBAAmBC,EAAgBE,EAAhBF,iBACrFO,EAAaH,EAAbG,SAEHC,EAAYC,sBAAZD,SACDE,EAAiB,EACrBC,EAAwBC,mBAAST,EAAKU,KAAKV,EAAKU,KAAK,IAAGC,EAAAC,YAAAJ,EAAA,GAAjDE,EAAIC,EAAA,GAAEE,EAAOF,EAAA,GACpBG,EAA0CL,mBAAS,UAASM,EAAAH,YAAAE,EAAA,GAArDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,EAA8BT,mBAAST,EAAKmB,QAAQnB,EAAKmB,QAAQ,IAAGC,EAAAR,YAAAM,EAAA,GAA7DC,EAAOC,EAAA,GAAEC,EAAUD,EAAA,GAC1BE,EAA0Bb,mBAAST,EAAKuB,OAAOvB,EAAKuB,OAAO,IAAGC,EAAAZ,YAAAU,EAAA,GAAvDG,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA0BlB,mBAAST,EAAK4B,MAAM5B,EAAK4B,MAAM,IAAGC,EAAAjB,YAAAe,EAAA,GAArDC,EAAKC,EAAA,GAAEC,EAAQD,EAAA,GACtBE,EAAwBtB,mBAAS,IAAGuB,EAAApB,YAAAmB,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACdG,EAAUC,cA6DhB,OACEC,IAAAC,cAACC,WAAQ,KACPF,IAAAC,cAACE,IAAQ,KACPH,IAAAC,cAAA,aAAO,oBACPD,IAAAC,cAAA,QACE5B,KAAK,cACL+B,QAAQ,iEAGZJ,IAAAC,cAACI,kBAAe,CAACC,GAA6B,KAAK,QACnDN,IAAAC,cAACI,kBAAe,CAACC,GAAIC,GAAyBxC,GAAU,YAGxDiC,IAAAC,cAACO,IAAS,CAAC1C,aAAcA,EAAc2C,UAAU,UAAU5C,QAASA,GAElEmC,IAAAC,cAACS,IAAU,MACXV,IAAAC,cAAA,OAAKU,UAAU,8BACbX,IAAAC,cAAA,OAAKU,UAAU,aACZzD,GAAaA,EAAU0D,QAAU,EAChCZ,IAAAC,cAAA,OAAKU,UAAU,OACbX,IAAAC,cAAA,OAAKU,UAAU,YACbX,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKU,UAAU,OACbX,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,OAAKU,UAAU,sBACbX,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,SAAOY,KAAK,OAAOC,SAAU,SAACC,GAAC,OAAGvC,EAAQuC,EAAEC,OAAOC,QAAQA,MAAO5C,MAUtE2B,IAAAC,cAAA,OAAKU,UAAU,aACbX,IAAAC,cAAA,OAAKU,UAAU,wBACbX,IAAAC,cAAA,aAAO,mBACPD,IAAAC,cAAA,UAAQa,SAAU,SAACC,GAAC,OAAGnC,EAAiBmC,EAAEC,OAAOC,QAAQA,MAAOtC,GAC9DqB,IAAAC,cAAA,cAAQ,UACRD,IAAAC,cAAA,cAAQ,oBAIC,WAAhBtB,GAA4BqB,IAAAC,cAAA,OAAKU,UAAU,aACxCX,IAAAC,cAAA,OAAKU,UAAU,sBACbX,IAAAC,cAAA,aAAO,WACPD,IAAAC,cAAA,SAEEU,UAAU,kBACVO,YAAY,UACZL,KAAK,OACLC,SAAU,SAACC,GAAC,OAAG/B,EAAW+B,EAAEC,OAAOC,QAAQA,MAAOnC,MAsBxDkB,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,OAAKU,UAAU,sBACbX,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,SAAOY,KAAK,SAASC,SAAU,SAACC,GAAWA,EAAEC,OAAOC,MAAML,QAAQ,IAAGvB,EAAS0B,EAAEC,OAAOC,QAAUA,MAAO7B,MAG5GY,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,OAAKU,UAAU,sBACbX,IAAAC,cAAA,aAAO,iBACPD,IAAAC,cAAA,SAAOY,KAAK,QAAQC,SAAU,SAACC,GAAQtB,EAASsB,EAAEC,OAAOC,QAAUA,MAAO1B,OAKhFS,IAAAC,cAAA,OAAKU,UAAU,wBACbX,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,OAAKU,UAAU,mBACbX,IAAAC,cAAA,aAAO,eACPD,IAAAC,cAAA,YACEiB,YAAY,4DACZ7C,KAAK,UACLyC,SAAU,SAACC,GAAQlB,EAAQkB,EAAEC,OAAOC,QAAUA,MAAOrB,QAO/DI,IAAAC,cAAA,OAAKU,UAAU,YACbX,IAAAC,cAAA,OAAKU,UAAU,mBACbX,IAAAC,cAAA,UAAI,cACJD,IAAAC,cAAA,OAAKU,UAAU,6BACbX,IAAAC,cAAA,OAAKU,UAAU,2BACbX,IAAAC,cAAA,OAAKU,UAAU,kBACbX,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,WAGRD,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,UACG/C,EAAUiE,KAAI,SAACC,EAAUC,GAKxB,IAAMC,EAAkBF,EAASE,gBAC3BC,GACJH,EAASI,MAAQpE,EAASqE,cAC1BC,QAAQ,GACJC,GACJL,EAAkBlE,EAASqE,cAC3BC,QAAQ,GAOV,OAJKxD,GADc,MAAnBoD,EAEMK,EAAuBP,EAASQ,SAEhCL,EAAoBH,EAASQ,SAEjC5B,IAAAC,cAAA,MAAIoB,IAAKA,GACPrB,IAAAC,cAAA,QAAMU,UAAU,qBACbS,EAASS,YAAY,MAAIT,EAASQ,UAC7B,IACR5B,IAAAC,cAAA,QAAMU,UAAU,eACO,OAApBW,EACGlE,EAAS0E,gBAEPH,EACAP,EAASQ,UACTF,QAAQ,GACVtE,EAAS0E,gBAEPP,EAAoBH,EAASQ,UAC7BF,QAAQ,UAO1B1B,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIU,UAAU,uBAAsB,YACpCX,IAAAC,cAAA,UAAI,mBAGRD,IAAAC,cAAA,OAAKU,UAAU,oBACbX,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIU,UAAU,eAAc,SAC5BX,IAAAC,cAAA,UACG7C,EAAS0E,eACR5D,EAAewD,QAAQ,OAKjC1B,IAAAC,cAAA,OAAKU,UAAU,oBAEjBX,IAAAC,cAAA,OAAKU,UAAU,qBACbX,IAAAC,cAAA,UAAQ8B,QAjNT,WACjB,GA5Bc,WACd,IAAIC,EAAe,IAAIC,OAAO,0CAC1BC,EAAgB,IAAID,OAAO,qDAC3BE,EAAgB,IAAIF,OAAO,yDAC3BG,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GACxBC,EAAW,CAAC,OAAO,iBAAiB,UAAU,eAAe,QAAQ,QACrEhE,EAAKiE,OAAO1B,OAAS,IAAGwB,EAAM,GAAK,GACnB,WAAhBzD,GAA0BG,EAAQwD,OAAO1B,OAAO,IAAGwB,EAAM,GAAK,GAC9C,WAAhBzD,IAA0ByD,EAAM,GAAK,GACf,MAArBhD,EAAM,IAAIwB,SAAewB,EAAM,GAAK,IACpCJ,EAAaO,KAAKhD,IAAU2C,EAAcK,KAAKhD,IAAS4C,EAAcI,KAAKhD,MAAS6C,EAAM,GAAK,GACpG,IAAK,IAAII,EAAI,EAAGA,EAAI,EAAEA,IACpB,GAAiB,IAAbJ,EAAMI,GAQR,OANAxE,EAAS,sBAADyE,OAAuBJ,EAAWG,IACxC,CACEE,WAAY,UACZC,aAAa,KAGV,EAGX,OAAO,EAKHC,GAAW,CACb,IAAMC,EAAY,CAChBC,OAAQnF,EACRU,OACAS,UACAM,QACAG,QACAK,OACAjB,gBACAoE,SAAU7F,EACV8F,OAAO,UAETC,IAAMC,KAAK,GAADT,OArDJ,yBAqDW,cACfI,GAAWM,MAAK,SAAAC,GACdC,QAAQC,IAAIF,GACZpF,EAAS,4BAA4B,CACnC0E,WAAW,UACXC,aAAY,IAEdnE,EAAQ,IACRQ,EAAW,IACXa,EAAQ,IACRR,EAAS,IACTI,EAAS,IACT,IAAK,IAAI+C,EAAI,EAAGA,EAAItF,EAAU0D,OAAQ4B,IACpChF,EAAiB,CAAE+F,IAAKrG,EAAUsF,GAAGe,IAAKC,MAAQtG,EAAUsF,GAAGgB,MAAQtG,EAAUsF,GAAGZ,WAEtFrE,IACAuC,EAAQ2D,KAAK,UAoL4B9C,UAAU,aAAY,mBAM3DX,IAAAC,cAAA,OAAKU,UAAU,OACbX,IAAAC,cAAA,OAAKU,UAAU,aACbX,IAAAC,cAAA,OAAKU,UAAU,+BACbX,IAAAC,cAAA,OAAKU,UAAU,+BACbX,IAAAC,cAAA,KAAGU,UAAU,gBAEfX,IAAAC,cAAA,OAAKU,UAAU,yBAAwB,sCACFX,IAAAC,cAAA,WAAO,IAC1CD,IAAAC,cAACyD,IAAI,CAACpD,GAA6B,KAAK","file":"static/js/18.c85a4402.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment,useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MetaTags from \"react-meta-tags\";\nimport { connect } from \"react-redux\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport { useToasts } from \"react-toast-notifications\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { removeAllFromCart} from \"../../redux/actions/cartActions\";\nimport { decrementProduct} from \"../../redux/actions/productActions\";\n// const URL = \"https://infinite-sands-08332.herokuapp.com/\";\nconst URL = \"http://localhost:9000/\";\nconst Checkout = ({user, location, cartItems, currency,isLogin,SetUserLogin,removeAllFromCart ,decrementProduct}) => {\n  const { pathname } = location;\n \n  let {addToast} = useToasts();\n  let cartTotalPrice = 0;\n  const [name, setName] = useState(user.name?user.name:\"\");\n  const [deliverOption, setDeliverOption] = useState(\"Pickup\");\n  const [address, setAddress] = useState(user.address?user.address:\"\");\n  const [phone, setPhone] = useState(user.number?user.number:\"\");\n  const [email, setEmail] = useState(user.email?user.email:\"\");\n  const [note, setNote] = useState(\"\");\n  const history = useHistory();\n  const isValid = () => {\n    let emailPattern = new RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n    let emailPattern2 = new RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+\\.[A-Za-z]+$/);\n    let emailPattern3 = new RegExp(/^[a-zA-Z0-9]+\\.+[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/);\n    let valid = [0, 1, 0, 0, 0, 1];\n    let validityof=[\"Name\",\"deliveryOption\",\"Address\",\"Phone Number\",\"Email\",\"Note\"]\n    if (name.trim().length > 0) valid[0] = 1;\n    if (deliverOption!==\"Pickup\"&&address.trim().length>0) valid[2] = 1;\n    if (deliverOption===\"Pickup\") valid[2] = 1;\n    if ((phone+\"\").length === 10) valid[3] = 1;\n    if ((emailPattern.test(email) || emailPattern2.test(email)|| emailPattern3.test(email))) valid[4] = 1;\n    for (let i = 0; i < 6;i++) {\n      if (valid[i] === 0) {\n\n        addToast(`Please Write valid ${validityof[i]}`, \n          {\n            appearance: \"warning\",\n            autoDismiss: true\n          }\n        )\n        return false;\n      }\n    }\n    return true;\n    \n\n  }\n  const placeOrder = () => {\n    if (isValid()) {\n      const orderData = {\n        userID: user,\n        name,\n        address,\n        phone,\n        email,\n        note,\n        deliverOption,\n        products: cartItems,\n        status:\"PLACED\"\n      }\n      axios.post(`${URL}placeOrder`, \n        orderData).then(res => {\n          console.log(res);\n          addToast(\"Order Placed Successfully\",{\n            appearance:\"success\",\n            autoDismiss:true\n          })\n          setName(\"\");\n          setAddress(\"\");\n          setNote(\"\");\n          setPhone(\"\");\n          setEmail(\"\");\n          for (let i = 0; i < cartItems.length; i++){\n            decrementProduct({ _id: cartItems[i]._id, stock: (cartItems[i].stock - cartItems[i].quantity) });\n          }\n          removeAllFromCart();\n          history.push('/');\n        })\n      }\n    }\n  return (\n    <Fragment>\n      <MetaTags>\n        <title>Flone | Checkout</title>\n        <meta\n          name=\"description\"\n          content=\"Checkout page of flone react minimalist eCommerce template.\"\n        />\n      </MetaTags>\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n        Checkout\n      </BreadcrumbsItem>\n      <LayoutOne SetUserLogin={SetUserLogin} headerTop=\"visible\" isLogin={isLogin}>\n        {/* breadcrumb */}\n        <Breadcrumb />\n        <div className=\"checkout-area pt-95 pb-100\">\n          <div className=\"container\">\n            {cartItems && cartItems.length >= 1 ? (\n              <div className=\"row\">\n                <div className=\"col-lg-7\">\n                  <div className=\"billing-info-wrap\">\n                    <h3>Billing Details</h3>\n                    <div className=\"row\">\n                      <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Name</label>\n                          <input type=\"text\" onChange={(e)=>setName(e.target.value)} value={name} />\n                        </div>\n                      </div>\n                      {/* <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Last Name</label>\n                          <input type=\"text\" />\n                        </div>\n                      </div> */}\n        \n                      <div className=\"col-lg-12\">\n                        <div className=\"billing-select mb-20\">\n                          <label>Delivery option</label>\n                          <select onChange={(e)=>setDeliverOption(e.target.value)} value={deliverOption}>\n                            <option>Pickup</option>\n                            <option>Home Delivery</option>\n                          </select>\n                        </div>\n                      </div>\n                    {deliverOption!==\"Pickup\"&&  <div className=\"col-lg-12\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Address</label>\n                          <input\n                          \n                            className=\"billing-address\"\n                            placeholder=\"Address\"\n                            type=\"text\"\n                            onChange={(e)=>setAddress(e.target.value)} value={address}\n                          />\n                        </div>\n                      </div>}\n                      {/* <div className=\"col-lg-12\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Town / City</label>\n                          <input type=\"text\" />\n                        </div>\n                      </div> */}\n                      {/* <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>State / County</label>\n                          <input type=\"text\" />\n                        </div>\n                      </div> */}\n                      {/* <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Postcode / ZIP</label>\n                          <input type=\"text\" />\n                        </div>\n                      </div> */}\n                      <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Phone</label>\n                          <input type=\"number\" onChange={(e) => { if(e.target.value.length<=10)setPhone(e.target.value);}} value={phone} />\n                        </div>\n                      </div>\n                      <div className=\"col-lg-6 col-md-6\">\n                        <div className=\"billing-info mb-20\">\n                          <label>Email Address</label>\n                          <input type=\"email\" onChange={(e) => { setEmail(e.target.value);}} value={email}   />\n                        </div>\n                      </div>\n                    </div>\n\n                    <div className=\"additional-info-wrap\">\n                      <h4>Additional information</h4>\n                      <div className=\"additional-info\">\n                        <label>Order notes</label>\n                        <textarea\n                          placeholder=\"Notes about your order, e.g. special notes for delivery. \"\n                          name=\"message\"\n                          onChange={(e) => { setNote(e.target.value);}} value={note} \n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-lg-5\">\n                  <div className=\"your-order-area\">\n                    <h3>Your order</h3>\n                    <div className=\"your-order-wrap gray-bg-4\">\n                      <div className=\"your-order-product-info\">\n                        <div className=\"your-order-top\">\n                          <ul>\n                            <li>Product</li>\n                            <li>Total</li>\n                          </ul>\n                        </div>\n                        <div className=\"your-order-middle\">\n                          <ul>\n                            {cartItems.map((cartItem, key) => {\n                              // const discountedPrice = getDiscountPrice(\n                              //   cartItem.price,\n                              //   cartItem.discount\n                              // );\n                              const discountedPrice = cartItem.discountedPrice;\n                              const finalProductPrice = (\n                                cartItem.price * currency.currencyRate\n                              ).toFixed(2);\n                              const finalDiscountedPrice = (\n                                discountedPrice * currency.currencyRate\n                              ).toFixed(2);\n\n                              discountedPrice != null\n                                ? (cartTotalPrice +=\n                                    finalDiscountedPrice * cartItem.quantity)\n                                : (cartTotalPrice +=\n                                    finalProductPrice * cartItem.quantity);\n                              return (\n                                <li key={key}>\n                                  <span className=\"order-middle-left\">\n                                    {cartItem.productName} X {cartItem.quantity}\n                                  </span>{\" \"}\n                                  <span className=\"order-price\">\n                                    {discountedPrice !== null\n                                      ? currency.currencySymbol +\n                                        (\n                                          finalDiscountedPrice *\n                                          cartItem.quantity\n                                        ).toFixed(2)\n                                      : currency.currencySymbol +\n                                        (\n                                          finalProductPrice * cartItem.quantity\n                                        ).toFixed(2)}\n                                  </span>\n                                </li>\n                              );\n                            })}\n                          </ul>\n                        </div>\n                        <div className=\"your-order-bottom\">\n                          <ul>\n                            <li className=\"your-order-shipping\">Shipping</li>\n                            <li>Free shipping</li>\n                          </ul>\n                        </div>\n                        <div className=\"your-order-total\">\n                          <ul>\n                            <li className=\"order-total\">Total</li>\n                            <li>\n                              {currency.currencySymbol +\n                                cartTotalPrice.toFixed(2)}\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                      <div className=\"payment-method\"></div>\n                    </div>\n                    <div className=\"place-order mt-25\">\n                      <button onClick={placeOrder} className=\"btn-hover\">Place Order</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ) : (\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"item-empty-area text-center\">\n                    <div className=\"item-empty-area__icon mb-30\">\n                      <i className=\"pe-7s-cash\"></i>\n                    </div>\n                    <div className=\"item-empty-area__text\">\n                      No items found in cart to checkout <br />{\" \"}\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>\n                        Shop Now\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nCheckout.propTypes = {\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  location: PropTypes.object\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    currency: state.currencyData\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeAllFromCart: () => {\n      dispatch(removeAllFromCart());\n    },\n    decrementProduct: (newStock) => {\n      dispatch(decrementProduct(newStock));\n    },\n  };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(Checkout);\n"],"sourceRoot":""}