{"version":3,"sources":["pages/other/Cart.js"],"names":["connect","state","cartItems","cartData","currency","currencyData","products","productData","dispatch","addToCart","item","addToast","quantityCount","decrementQty","removeFromCart","removeAllFromCart","replace","data","_ref","isLogin","SetUserLogin","location","_useState","useState","_slicedToArray","useToasts","_useState3","_useState4","setProducts","_useState5","_useState6","CartItems","setCartItems","_useState7","_useState8","setcall","_useState9","_useState10","loading","setLoading","console","log","pathname","cartTotalPrice","useEffect","fetch","concat","then","res","status","appearance","autoDismiss","json","forEach","element","index","product","find","obj","_id","temp","_toConsumableArray","stock","discountedPrice","productName","category","price","quantity","modifyCartItems","catch","err","React","createElement","Fragment","MetaTags","name","content","BreadcrumbsItem","to","process","LayoutOne","headerTop","Breadcrumb","className","Loading","length","map","cartItem","key","finalProductPrice","currencyRate","toFixed","finalDiscountedPrice","discount","Math","floor","src","image","alt","selectedProductColor","selectedProductSize","currencySymbol","onClick","type","value","readOnly","disabled","undefined","Link"],"mappings":"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","file":"static/js/15.f5d69bc2.chunk.js","sourcesContent":["import \"../../assets/css/OrderStatus.css\"\nimport PropTypes from \"prop-types\";\nimport React, { Fragment, useState ,useEffect} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport MetaTags from \"react-meta-tags\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport Loading from \"../../components/Loading\";\nimport {\n  addToCart,\n  decrementQty,\n  removeFromCart,\n  cartItemStock,\n  removeAllFromCart,\n  replace\n} from \"../../redux/actions/cartActions\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nconst imageURL = \"http://localhost:9000/static/\";\n// const imageURL = \"https://infinite-sands-08332.herokuapp.com/static/\";\n// const URL = \"https://infinite-sands-08332.herokuapp.com/\";\nconst URL = \"http://localhost:9000/sone/\";\nconst Cart = ({\n  isLogin,\n  SetUserLogin,\n  location,\n  cartItems,\n  products,\n  currency,\n  decrementQty,\n  addToCart,\n  removeFromCart,\n  replace,\n  removeAllFromCart\n}) => {\n  const [quantityCount] = useState(1);\n  const { addToast } = useToasts();\n  const [Products, setProducts] = useState(products.products);\n  // let CartItems = cartItems;\n  const [CartItems,setCartItems]=useState(cartItems);\n  const [call, setcall] = useState(0);\n  const [loading, setLoading] = useState(false);\n  console.log(CartItems);\n  const { pathname } = location;\n  let cartTotalPrice = 0;\n  const fetchingErrorHandler = (err) => {\n    addToast(err, {\n      appearance: \"warning\",\n      autoDismiss: true\n    })\n  }\n  const modifyCartItems = (data) => {\n    console.log(CartItems);\n    CartItems.forEach((element, index) => {\n      \n      const product = data.find((obj) => {\n        console.log(obj, element);\n        return obj._id === element._id;\n      });\n      console.log(product);\n      if (product)\n      {\n        setCartItems((state)=>{\n          let temp=[...state];\n          temp[index].stock = product.stock;\n          temp[index].discountedPrice=product.discountedPrice;\n          temp[index].productName=product.productName;\n          temp[index].category=product.category;\n          temp[index].price=product.price;\n          if (temp[index].quantity > temp[index].stock) {\n            temp[index].quantity = temp[index].stock;\n          }\n          return temp;\n        })\n      }\n      else\n        delete CartItems[index];\n      console.log(CartItems);\n    })\n    replace(CartItems);\n    setcall(0);\n  }\n  useEffect(() => {\n    setCartItems(cartItems)\n  }, [cartItems]);\n  useEffect(() => {\n    setLoading(true);\n    fetch(`${URL}getProducts`).then(\n      res => {\n        console.log(res);\n        if (res.status == 400) {\n          fetchingErrorHandler(\"Error while Fetching Products here\");\n        }\n        return res.json();\n      }\n      ).then(\n        data => {\n          setLoading(false);\n          setProducts(data);\n          console.log(data);\n          modifyCartItems(data);\n      }\n    ).catch(err => {\n      console.log(err)\n      // fetchingErrorHandler(\"Error while Fetching Products there\");\n    });\n  }, []);\n  return (\n    <Fragment>\n      <MetaTags>\n        <title>Flone | Cart</title>\n        <meta\n          name=\"description\"\n          content=\"Cart page of flone react minimalist eCommerce template.\"\n        />\n      </MetaTags>\n\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n        Cart\n      </BreadcrumbsItem>\n\n      <LayoutOne SetUserLogin={SetUserLogin}  headerTop=\"visible\" isLogin={isLogin}>\n        {/* breadcrumb */}\n        <Breadcrumb />\n        <div className=\"cart-main-area pt-90 pb-100\">\n          <div className=\"container\">\n            {loading&&<Loading></Loading>}\n            {CartItems && CartItems.length >= 1 ? (\n              <Fragment>\n                <h3 className=\"cart-page-title\">Your cart items</h3>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"table-content table-responsive cart-table-content\">\n                      <table>\n                        <thead>\n                          <tr>\n                            <th>Product</th>\n                            <th>Unit Price</th>\n                            <th>Qty</th>\n                            <th>Subtotal</th>\n                            <th>action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {CartItems.map((cartItem, key) => {\n                            console.log(CartItems,key);\n                            console.log(cartItem,cartItem.quantity);\n                            const discountedPrice = cartItem.discountedPrice;\n                            // const discountedPrice = getDiscountPrice(\n                            //   cartItem.price,\n                            //   cartItem.discount\n                            // );\n                            const finalProductPrice = (\n                              cartItem.price * currency.currencyRate\n                            ).toFixed(2);\n                            const finalDiscountedPrice = (\n                              discountedPrice * currency.currencyRate\n                            ).toFixed(2);\n                            let discount =100- (discountedPrice / cartItem.price) * 100;\n                            discount = Math.floor(discount);\n                            discountedPrice != null\n                              ? (cartTotalPrice +=\n                                  finalDiscountedPrice * cartItem.quantity)\n                              : (cartTotalPrice +=\n                                  finalProductPrice * cartItem.quantity);\n                            return (\n                              <tr key={key}>\n                                <td className=\"product-thumbnail\">\n                                  {/* <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      cartItem.id\n                                    }\n                                  > */}\n                                    <img\n                                      className=\"img-fluid\"\n                                      src={\n                                        imageURL +\n                                        cartItem.image\n                                      }\n                                      alt=\"\"\n                                    />\n                                  {/* </Link> */}\n                               \n                                  {/* <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      cartItem.productID\n                                    }\n                                  > */}\n                                    {cartItem.productName}\n                                  {/* </Link> */}\n                                  {cartItem.selectedProductColor &&\n                                  cartItem.selectedProductSize ? (\n                                    <div className=\"cart-item-variation\">\n                                      <span>\n                                        Color: {cartItem.selectedProductColor}\n                                      </span>\n                                      <span>\n                                        Size: {cartItem.selectedProductSize}\n                                      </span>\n                                    </div>\n                                  ) : (\n                                    \"\"\n                                  )}\n                                </td>\n\n                                <td className=\"product-price-cart\">\n                                  {discountedPrice !== null ? (\n                                    <Fragment>\n                                      <span className=\"amount old\">\n                                        {currency.currencySymbol +\n                                          finalProductPrice}\n                                      </span>\n                                      <span className=\"amount\">\n                                        {currency.currencySymbol +\n                                          finalDiscountedPrice}\n                                      </span>\n                                    </Fragment>\n                                  ) : (\n                                    <span className=\"amount\">\n                                      {currency.currencySymbol +\n                                        finalProductPrice}\n                                    </span>\n                                  )}\n                                </td>\n\n                                <td className=\"product-quantity\">\n                                  {cartItem.stock===0?\"Out of Stock\":<div className=\"cart-plus-minus\">\n                                    <button\n                                      className=\"dec qtybutton\"\n                                      onClick={() =>\n                                        decrementQty(cartItem, addToast)\n                                      }\n                                    >\n                                      -\n                                    </button>\n                                    <input\n                                      className=\"cart-plus-minus-box\"\n                                      type=\"text\"\n                                      value={cartItem.quantity}\n                                      readOnly\n                                    />\n                                    <button\n                                      className=\"inc qtybutton\"\n                                      onClick={() =>\n                                        addToCart(\n                                          cartItem,\n                                          addToast,\n                                          quantityCount\n                                        )\n                                      }\n                                      disabled={\n                                        cartItem !== undefined &&\n                                        cartItem.quantity &&\n                                        cartItem.quantity >=\n                                          cartItem.stock\n                                      }\n                                    >\n                                      +\n                                    </button>\n                                  </div>}\n                                </td>\n                                <td className=\"product-subtotal\">\n                                  {discountedPrice !== null\n                                    ? currency.currencySymbol +\n                                      (\n                                        finalDiscountedPrice * cartItem.quantity\n                                      ).toFixed(2)\n                                    : currency.currencySymbol +\n                                      (\n                                        finalProductPrice * cartItem.quantity\n                                      ).toFixed(2)}\n                                </td>\n\n                                <td className=\"product-remove\">\n                                  <button\n                                    onClick={() =>\n                                      removeFromCart(cartItem, addToast)\n                                    }\n                                  >\n                                    <i className=\"fa fa-times\"></i>\n                                  </button>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"cart-shiping-update-wrapper\">\n                      <div className=\"cart-shiping-update\">\n                        <Link\n                          to={process.env.PUBLIC_URL + \"/\"}\n                        >\n                          Continue Shopping\n                        </Link>\n                      </div>\n                      <div className=\"cart-clear\">\n                        <button onClick={() => removeAllFromCart(addToast)}>\n                          Clear Shopping Cart\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row justify-content-center\">\n                  {/* <div className=\"col-lg-4 col-md-6\">\n                    <div className=\"cart-tax\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gray\">\n                          Estimate Shipping And Tax\n                        </h4>\n                      </div>\n                      <div className=\"tax-wrapper\">\n                        <p>\n                          Enter your destination to get a shipping estimate.\n                        </p>\n                        <div className=\"tax-select-wrapper\">\n                          <div className=\"tax-select\">\n                            <label>* Country</label>\n                            <select className=\"email s-email s-wid\">\n                              <option>Bangladesh</option>\n                              <option>Albania</option>\n                              <option>Åland Islands</option>\n                              <option>Afghanistan</option>\n                              <option>Belgium</option>\n                            </select>\n                          </div>\n                          <div className=\"tax-select\">\n                            <label>* Region / State</label>\n                            <select className=\"email s-email s-wid\">\n                              <option>Bangladesh</option>\n                              <option>Albania</option>\n                              <option>Åland Islands</option>\n                              <option>Afghanistan</option>\n                              <option>Belgium</option>\n                            </select>\n                          </div>\n                          <div className=\"tax-select\">\n                            <label>* Zip/Postal Code</label>\n                            <input type=\"text\" />\n                          </div>\n                          <button className=\"cart-btn-2\" type=\"submit\">\n                            Get A Quote\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div className=\"col-lg-4 col-md-6\">\n                    <div className=\"discount-code-wrapper\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gray\">\n                          Use Coupon Code\n                        </h4>\n                      </div>\n                      <div className=\"discount-code\">\n                        <p>Enter your coupon code if you have one.</p>\n                        <form>\n                          <input type=\"text\" required name=\"name\" />\n                          <button className=\"cart-btn-2\" type=\"submit\">\n                            Apply Coupon\n                          </button>\n                        </form>\n                      </div>\n                    </div>\n                  </div> */}\n\n                  <div className=\"col-lg-4 col-md-12\">\n                    <div className=\"grand-totall\">\n                      <div className=\"title-wrap\">\n                        <h4 className=\"cart-bottom-title section-bg-gary-cart\">\n                          Cart Total\n                        </h4>\n                      </div>\n                      <h5>\n                        Total products{\" \"}\n                        <span>\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\n                        </span>\n                      </h5>\n\n                      <h4 className=\"grand-totall-title\">\n                        Grand Total{\" \"}\n                        <span>\n                          {currency.currencySymbol + cartTotalPrice.toFixed(2)}\n                        </span>\n                      </h4>\n                      \n                   {isLogin?<Link to={process.env.PUBLIC_URL + \"/checkout\"}>\n                        Proceed to Checkout\n                      </Link>:<Link onClick={()=>{\n                          addToast(\"Login to checkout\", {\n                            appearance: \"warning\",\n                            autoDismiss: true\n                          });\n                      }} to={process.env.PUBLIC_URL + \"/login-register\"}>\n                        Proceed to Checkout\n                      </Link>}\n\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"item-empty-area text-center\">\n                    <div className=\"item-empty-area__icon mb-30\">\n                      <i className=\"pe-7s-cart\"></i>\n                    </div>\n                    <div className=\"item-empty-area__text\">\n                      No items found in cart <br />{\" \"}\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>\n                        Shop Now\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nCart.propTypes = {\n  addToCart: PropTypes.func,\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  decrementQty: PropTypes.func,\n  location: PropTypes.object,\n  removeAllFromCart: PropTypes.func,\n  removeFromCart: PropTypes.func\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    currency: state.currencyData,\n    products:state.productData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    decrementQty: (item, addToast) => {\n      dispatch(decrementQty(item, addToast));\n    },\n    removeFromCart: (item, addToast) => {\n      dispatch(removeFromCart(item, addToast));\n    },\n    removeAllFromCart: addToast => {\n      dispatch(removeAllFromCart(addToast));\n    },\n    replace: (data) => {\n      dispatch(replace(data));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"],"sourceRoot":""}