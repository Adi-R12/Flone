{"version":3,"sources":["pages/other/Wishlist.js"],"names":["connect","state","cartItems","cartData","wishlistItems","wishlistData","currency","currencyData","dispatch","addToCart","item","addToast","quantityCount","addToWishlist","removeFromWishlist","removeAllFromWishlist","_ref","isLogin","SetUserLogin","location","useToasts","pathname","React","createElement","Fragment","MetaTags","name","content","BreadcrumbsItem","to","process","LayoutOne","headerTop","Breadcrumb","className","length","map","wishlistItem","key","discountedPrice","finalProductPrice","price","currencyRate","toFixed","finalDiscountedPrice","cartItem","filter","productID","src","image","alt","productName","currencySymbol","affiliateLink","href","rel","target","variation","Link","concat","id","stock","onClick","undefined","quantity","disabled","title"],"mappings":"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","file":"static/js/16.ce4b16cf.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useToasts } from \"react-toast-notifications\";\nimport MetaTags from \"react-meta-tags\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\nimport { getDiscountPrice } from \"../../helpers/product\";\nimport \"../../assets/css/OrderStatus.css\"\nimport {\n  addToWishlist,\n  removeFromWishlist,\n  removeAllFromWishlist\n} from \"../../redux/actions/wishlistActions\";\nimport { addToCart } from \"../../redux/actions/cartActions\";\nimport LayoutOne from \"../../layouts/LayoutOne\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nconst imageURL = \"http://localhost:9000/static/\";\n// const imageURL = \"https://infinite-sands-08332.herokuapp.com/static/\";\nconst Wishlist = ({\n  isLogin,\n  SetUserLogin,\n  location,\n  cartItems,\n  currency,\n  addToCart,\n  wishlistItems,\n  removeFromWishlist,\n  removeAllFromWishlist\n}) => {\n  const { addToast } = useToasts();\n  const { pathname } = location;\n\n  return (\n    <Fragment>\n      <MetaTags>\n        <title>Flone | Wishlist</title>\n        <meta\n          name=\"description\"\n          content=\"Wishlist page of flone react minimalist eCommerce template.\"\n        />\n      </MetaTags>\n\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>Home</BreadcrumbsItem>\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n        Wishlist\n      </BreadcrumbsItem>\n\n      <LayoutOne SetUserLogin={SetUserLogin} headerTop=\"visible\" isLogin={isLogin}>\n        {/* breadcrumb */}\n        <Breadcrumb />\n        <div className=\"cart-main-area pt-90 pb-100\">\n          <div className=\"container\">\n            {wishlistItems && wishlistItems.length >= 1 ? (\n              <Fragment>\n                <h3 className=\"cart-page-title\">Your wishlist items</h3>\n                <div className=\"row\">\n                  <div className=\"col-12\">\n                    <div className=\"table-content table-responsive cart-table-content\">\n                      <table>\n                        <thead>\n                          <tr>\n                          \n                            <th>Product</th>\n                            <th>Unit Price</th>\n                            <th>Add To Cart</th>\n                            <th>action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {wishlistItems.map((wishlistItem, key) => {\n                            // const discountedPrice = getDiscountPrice(\n                            //   wishlistItem.price,\n                            //   wishlistItem.discount\n                            // );\n                            const discountedPrice = wishlistItem.discountedPrice;\n                            const finalProductPrice = (\n                              wishlistItem.price * currency.currencyRate\n                            ).toFixed(2);\n                            const finalDiscountedPrice = (\n                              discountedPrice * currency.currencyRate\n                            ).toFixed(2);\n                            const cartItem = cartItems.filter(\n                              item => item.productID === wishlistItem.productID\n                            )[0];\n                            return (\n                              <tr key={key}>\n                                <td className=\"product-thumbnail\">\n                                  {/* <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      wishlistItem.productID\n                                    }\n                                  > */}\n                                    <img\n                                      className=\"img-fluid\"\n                                      src={\n                                        imageURL +\n                                        wishlistItem.image\n                                      }\n                                      alt=\"\"\n                                    />\n                                  {/* </Link> */}\n                                \n                                  {/* <Link\n                                    to={\n                                      process.env.PUBLIC_URL +\n                                      \"/product/\" +\n                                      wishlistItem.productID\n                                    }\n                                  > */}\n                                    {wishlistItem.productName}\n                                  {/* </Link> */}\n                                </td>\n\n                                <td className=\"product-price-cart\">\n                                  {discountedPrice !== null ? (\n                                    <Fragment>\n                                      <span className=\"amount old\">\n                                        {currency.currencySymbol +\n                                          finalProductPrice}\n                                      </span>\n                                      <span className=\"amount\">\n                                        {currency.currencySymbol +\n                                          finalDiscountedPrice}\n                                      </span>\n                                    </Fragment>\n                                  ) : (\n                                    <span className=\"amount\">\n                                      {currency.currencySymbol +\n                                        finalProductPrice}\n                                    </span>\n                                  )}\n                                </td>\n\n                                <td className=\"product-wishlist-cart\">\n                                  {wishlistItem.affiliateLink ? (\n                                    <a\n                                      href={wishlistItem.affiliateLink}\n                                      rel=\"noopener noreferrer\"\n                                      target=\"_blank\"\n                                    >\n                                      {\" \"}\n                                      Buy now{\" \"}\n                                    </a>\n                                  ) : wishlistItem.variation &&\n                                    wishlistItem.variation.length >= 1 ? (\n                                    <Link\n                                      to={`${process.env.PUBLIC_URL}/product/${wishlistItem.id}`}\n                                    >\n                                      Select option\n                                    </Link>\n                                  ) : wishlistItem.stock &&\n                                    wishlistItem.stock > 0 ? (\n                                    <button\n                                      onClick={() =>\n                                        addToCart(wishlistItem, addToast)\n                                      }\n                                      className={\n                                        cartItem !== undefined &&\n                                        cartItem.quantity > 0\n                                          ? \"active\"\n                                          : \"\"\n                                      }\n                                      disabled={\n                                        cartItem !== undefined &&\n                                        cartItem.quantity > 0\n                                      }\n                                      title={\n                                        wishlistItem !== undefined\n                                          ? \"Added to cart\"\n                                          : \"Add to cart\"\n                                      }\n                                    >\n                                      {cartItem !== undefined &&\n                                      cartItem.quantity > 0\n                                        ? \"Added\"\n                                        : \"Add to cart\"}\n                                    </button>\n                                  ) : (\n                                    <button disabled className=\"active\">\n                                      Out of stock\n                                    </button>\n                                  )}\n                                </td>\n\n                                <td className=\"product-remove\">\n                                  <button\n                                    onClick={() =>\n                                      removeFromWishlist(wishlistItem, addToast)\n                                    }\n                                  >\n                                    <i className=\"fa fa-times\"></i>\n                                  </button>\n                                </td>\n                              </tr>\n                            );\n                          })}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"row\">\n                  <div className=\"col-lg-12\">\n                    <div className=\"cart-shiping-update-wrapper\">\n                      <div className=\"cart-shiping-update\">\n                        <Link\n                          to={process.env.PUBLIC_URL + \"/\"}\n                        >\n                          Continue Shopping\n                        </Link>\n                      </div>\n                      <div className=\"cart-clear\">\n                        <button onClick={() => removeAllFromWishlist(addToast)}>\n                          Clear Wishlist\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Fragment>\n            ) : (\n              <div className=\"row\">\n                <div className=\"col-lg-12\">\n                  <div className=\"item-empty-area text-center\">\n                    <div className=\"item-empty-area__icon mb-30\">\n                      <i className=\"pe-7s-like\"></i>\n                    </div>\n                    <div className=\"item-empty-area__text\">\n                      No items found in wishlist <br />{\" \"}\n                      <Link to={process.env.PUBLIC_URL + \"/\"}>\n                        Add Items\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </LayoutOne>\n    </Fragment>\n  );\n};\n\nWishlist.propTypes = {\n  addToCart: PropTypes.func,\n  cartItems: PropTypes.array,\n  currency: PropTypes.object,\n  location: PropTypes.object,\n  removeAllFromWishlist: PropTypes.func,\n  removeFromWishlist: PropTypes.func,\n  wishlistItems: PropTypes.array\n};\n\nconst mapStateToProps = state => {\n  return {\n    cartItems: state.cartData,\n    wishlistItems: state.wishlistData,\n    currency: state.currencyData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addToCart: (item, addToast, quantityCount) => {\n      dispatch(addToCart(item, addToast, quantityCount));\n    },\n    addToWishlist: (item, addToast, quantityCount) => {\n      dispatch(addToWishlist(item, addToast, quantityCount));\n    },\n    removeFromWishlist: (item, addToast, quantityCount) => {\n      dispatch(removeFromWishlist(item, addToast, quantityCount));\n    },\n    removeAllFromWishlist: addToast => {\n      dispatch(removeAllFromWishlist(addToast));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wishlist);\n"],"sourceRoot":""}